/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IKeeper, IKeeperInterface } from '../../../contracts/interfaces/IKeeper'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'jobId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'cronUpkeep',
        type: 'address',
      },
    ],
    name: 'CronUpkeepUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'jobId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'encodedCron',
        type: 'string',
      },
    ],
    name: 'EncodedCronUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'pauseKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_cronUpkeep',
        type: 'address',
      },
    ],
    name: 'setCronUpkeep',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_encodedCron',
        type: 'string',
      },
    ],
    name: 'setEncodedCron',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class IKeeper__factory {
  static readonly abi = _abi
  static createInterface(): IKeeperInterface {
    return new utils.Interface(_abi) as IKeeperInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IKeeper {
    return new Contract(address, _abi, signerOrProvider) as IKeeper
  }
}
