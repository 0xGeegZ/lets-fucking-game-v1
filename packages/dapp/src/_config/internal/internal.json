{
  "5": {
    "GameFactory": {
      "address": "0xd768B91254ed4EA00F51A281B1095Bb7840Ccd73",
      "libraries": {},
      "transactionHash": "0xcd8da961035b6d3402a1d3dcee6cadf6b24bfb08963b145fd3b68502de76cc79",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_game", "type": "address" },
            { "internalType": "address", "name": "_cronUpkeep", "type": "address" },
            { "internalType": "uint256", "name": "_gameCreationAmount", "type": "uint256" },
            { "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "nextId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "gameAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "implementationVersion", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "creatorAddress", "type": "address" }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }],
          "name": "addAuthorizedAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "authorizedAmounts",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_name", "type": "bytes32" },
            { "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" },
            { "internalType": "uint256", "name": "_playTimeRange", "type": "uint256" },
            { "internalType": "uint256", "name": "_registrationAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" },
            { "internalType": "uint256", "name": "_creatorFee", "type": "uint256" },
            { "internalType": "string", "name": "_encodedCron", "type": "string" },
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "createNewGame",
          "outputs": [{ "internalType": "address", "name": "game", "type": "address" }],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "deployedGames",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "versionId", "type": "uint256" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" },
            { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "gameCreationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "games",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_authorizedAmount", "type": "uint256" }],
          "name": "getAuthorizedAmount",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "bool", "name": "isUsed", "type": "bool" }
              ],
              "internalType": "struct GameFactory.AuthorizedAmount",
              "name": "gameAuthorisedAmount",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getAuthorizedAmounts",
          "outputs": [{ "internalType": "uint256[]", "name": "gameAuthorisedAmounts", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDeployedGames",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "versionId", "type": "uint256" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "deployedAddress", "type": "address" },
                { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
              ],
              "internalType": "struct GameFactory.Game[]",
              "name": "allGames",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestVersionId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "pauseAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "resumeAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_game", "type": "address" }],
          "name": "setNewGameV1",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "updateCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "usedAuthorizedAmounts",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bool", "name": "isUsed", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "withdrawFunds", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-22T21:43:01.552Z",
      "olds": []
    },
    "GameV1": {
      "address": "0x19B4F2603DA9d3AA6a7068B314f29FEe3a3eCD69",
      "libraries": { "Cron": "0x028108eb5f57f0f18db335208638f7e3a7f8a92f" },
      "transactionHash": "0xe520a00e67828aa44e2e7b7e875103c37556f77f9ef6ebe439ec7ca3dec2f65d",
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldAdmin", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
          ],
          "name": "AdminOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "CreatorFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldCreator", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newCreator", "type": "address" }
          ],
          "name": "CreatorOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }
          ],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "string", "name": "encodedCron", "type": "string" }
          ],
          "name": "EncodedCronUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldFactory", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newFactory", "type": "address" }
          ],
          "name": "FactoryOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundCount", "type": "uint256" }
          ],
          "name": "GameLost",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "claimer", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountClaimed", "type": "uint256" }
          ],
          "name": "GamePrizeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameSplitted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "winnersCounter", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameWon",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }],
          "name": "PlayedRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "position", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "standard", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "contractAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "name": "PrizeAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "RegisteredForGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "resetId", "type": "uint256" }
          ],
          "name": "ResetGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "StartedGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimedByFactory",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }
          ],
          "name": "VoteToSplitPot",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [],
          "name": "MAX_CREATOR_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_TREASURY_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "addPrizes",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        { "inputs": [], "name": "claimCreatorFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "claimPrize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creator",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "encodedCron",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "factory",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getGameData",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "playerAddressesCount", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "bool", "name": "isPaused", "type": "bool" },
                { "internalType": "bool", "name": "isInProgress", "type": "bool" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "admin", "type": "address" },
                { "internalType": "string", "name": "encodedCron", "type": "string" }
              ],
              "internalType": "struct GameV1Interface.GameData",
              "name": "gameData",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_player", "type": "address" }],
          "name": "getPlayer",
          "outputs": [
            {
              "components": [
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
                { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
                { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
                { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "hasLost", "type": "bool" },
                { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Player",
              "name": "gamePlayer",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getPlayerAddresses",
          "outputs": [{ "internalType": "address[]", "name": "gamePlayerAddresses", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getPrizes",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "gamePrizes",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getRemainingPlayersCount",
          "outputs": [{ "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getWinners",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "amountWon", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "prizeClaimed", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Winner[]",
              "name": "gameWinners",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "id",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "owner", "type": "address" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "cronUpkeep", "type": "address" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "version", "type": "uint256" },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "string", "name": "encodedCron", "type": "string" },
                {
                  "components": [
                    { "internalType": "uint256", "name": "position", "type": "uint256" },
                    { "internalType": "uint256", "name": "amount", "type": "uint256" },
                    { "internalType": "uint256", "name": "standard", "type": "uint256" },
                    { "internalType": "address", "name": "contractAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                  ],
                  "internalType": "struct GameV1Interface.Prize[]",
                  "name": "prizes",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct GameV1Interface.Initialization",
              "name": "_initialization",
              "type": "tuple"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isAllPlayersSplitOk",
          "outputs": [{ "internalType": "bool", "name": "isSplitOk", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGameAllPrizesStandard",
          "outputs": [{ "internalType": "bool", "name": "isStandard", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGamePayable",
          "outputs": [{ "internalType": "bool", "name": "isPayable", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isInProgress",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxPlayers",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "playRound", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "playTimeRange",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "playerAddresses",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "name": "players",
          "outputs": [
            { "internalType": "address", "name": "playerAddress", "type": "address" },
            { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
            { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
            { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
            { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
            { "internalType": "uint256", "name": "position", "type": "uint256" },
            { "internalType": "bool", "name": "hasLost", "type": "bool" },
            { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "registerForGame", "outputs": [], "stateMutability": "payable", "type": "function" },
        {
          "inputs": [],
          "name": "registrationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "roundId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_creatorFee", "type": "uint256" }],
          "name": "setCreatorFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "setCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "_encodedCron", "type": "string" }],
          "name": "setEncodedCron",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" }],
          "name": "setMaxPlayers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "_name", "type": "bytes32" }],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" }],
          "name": "setTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_creator", "type": "address" }],
          "name": "transferCreatorOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }],
          "name": "transferFactoryOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "triggerDailyCheckpoint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "version",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "voteToSplitPot", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_receiver", "type": "address" }],
          "name": "withdrawFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-22T21:43:01.559Z",
      "olds": []
    },
    "CronExternal": {
      "address": "0x028108eb5f57f0f18db335208638f7e3a7f8a92f",
      "libraries": {},
      "transactionHash": "0xd514bbdfe6e60c901eb8a32e848eab859bb1311f91c0247820651f33f2f27dcd",
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "field", "type": "string" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "InvalidField",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "string", "name": "reason", "type": "string" }],
          "name": "InvalidSpec",
          "type": "error"
        },
        { "inputs": [], "name": "ListTooLarge", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "lastTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            },
            { "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "matches",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "nextTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "toCronString",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toEncodedSpec",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toSpec",
          "outputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "date": "2022-11-22T21:43:01.564Z",
      "olds": []
    },
    "CronUpkeep": {
      "address": "0x76775c74A54799792B39D1cfD1EFEEBE0344c616",
      "libraries": { "Cron": "0x028108eb5f57f0f18db335208638f7e3a7f8a92f" },
      "transactionHash": "0x3210ab40759c8544d64e98190c3bcd3b7698fbf619012131eda77d050acf106c",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "maxJobs", "type": "uint256" },
            { "internalType": "bytes", "name": "firstJob", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "CallFailed",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobIDNotFound",
          "type": "error"
        },
        { "inputs": [], "name": "ExceedsMaxJobs", "type": "error" },
        { "inputs": [], "name": "InvalidHandler", "type": "error" },
        { "inputs": [], "name": "OnlySimulatedBackend", "type": "error" },
        { "inputs": [], "name": "TickDoesntMatchSpec", "type": "error" },
        { "inputs": [], "name": "TickInFuture", "type": "error" },
        { "inputs": [], "name": "TickTooOld", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobDeleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "CronJobExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "inputs": [], "name": "acceptOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "addDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "name": "checkUpkeep",
          "outputs": [
            { "internalType": "bool", "name": "", "type": "bool" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "bytes", "name": "encodedCronSpec", "type": "bytes" }
          ],
          "name": "createCronJobFromEncodedSpec",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "deleteCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getActiveCronJobIDs",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "getCronJob",
          "outputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "string", "name": "cronString", "type": "string" },
            { "internalType": "uint256", "name": "nextTick", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDelegators",
          "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getNextCronJobIDs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "performData", "type": "bytes" }],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "removeDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "s_maxJobs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "to", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "newTarget", "type": "address" },
            { "internalType": "bytes", "name": "newHandler", "type": "bytes" },
            { "internalType": "bytes", "name": "newEncodedCronSpec", "type": "bytes" }
          ],
          "name": "updateCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "date": "2022-11-22T21:43:01.569Z",
      "olds": []
    },
    "MultiCall3": {
      "address": "0x3cB1f308f9cDF098968Cb805339936FaB72ECD72",
      "libraries": {},
      "transactionHash": "0x5b77e7ce8d2e1b8c1f90e54345817264a5af05201ceb94aff6f50304a05f8922",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes[]", "name": "returnData", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "uint256", "name": "value", "type": "uint256" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3Value[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3Value",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "blockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBasefee",
          "outputs": [{ "internalType": "uint256", "name": "basefee", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "name": "getBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBlockNumber",
          "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getChainId",
          "outputs": [{ "internalType": "uint256", "name": "chainid", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockCoinbase",
          "outputs": [{ "internalType": "address", "name": "coinbase", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockDifficulty",
          "outputs": [{ "internalType": "uint256", "name": "difficulty", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockGasLimit",
          "outputs": [{ "internalType": "uint256", "name": "gaslimit", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockTimestamp",
          "outputs": [{ "internalType": "uint256", "name": "timestamp", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }],
          "name": "getEthBalance",
          "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLastBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryAggregate",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryBlockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "date": "2022-11-22T21:43:01.574Z",
      "olds": []
    }
  },
  "97": {
    "GameFactory": {
      "address": "0xc5ABe709741c7758A77ef72edDdFD9aCA1d08E70",
      "libraries": {},
      "transactionHash": "0x9d13c66be813356c51b278b63a56749852595ea6a66c0869dafb24c529b46fa7",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_game", "type": "address" },
            { "internalType": "address", "name": "_cronUpkeep", "type": "address" },
            { "internalType": "uint256", "name": "_gameCreationAmount", "type": "uint256" },
            { "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "nextId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "gameAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "implementationVersion", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "creatorAddress", "type": "address" }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }],
          "name": "addAuthorizedAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "authorizedAmounts",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_name", "type": "bytes32" },
            { "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" },
            { "internalType": "uint256", "name": "_playTimeRange", "type": "uint256" },
            { "internalType": "uint256", "name": "_registrationAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" },
            { "internalType": "uint256", "name": "_creatorFee", "type": "uint256" },
            { "internalType": "string", "name": "_encodedCron", "type": "string" },
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "createNewGame",
          "outputs": [{ "internalType": "address", "name": "game", "type": "address" }],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "deployedGames",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "versionId", "type": "uint256" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" },
            { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "gameCreationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "games",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_authorizedAmount", "type": "uint256" }],
          "name": "getAuthorizedAmount",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "bool", "name": "isUsed", "type": "bool" }
              ],
              "internalType": "struct GameFactory.AuthorizedAmount",
              "name": "gameAuthorisedAmount",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getAuthorizedAmounts",
          "outputs": [{ "internalType": "uint256[]", "name": "gameAuthorisedAmounts", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDeployedGames",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "versionId", "type": "uint256" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "deployedAddress", "type": "address" },
                { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
              ],
              "internalType": "struct GameFactory.Game[]",
              "name": "allGames",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestVersionId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "pauseAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "resumeAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_game", "type": "address" }],
          "name": "setNewGameV1",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "updateCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "usedAuthorizedAmounts",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bool", "name": "isUsed", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "withdrawFunds", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-23T12:27:41.763Z",
      "olds": []
    },
    "GameV1": {
      "address": "0x6599a4Bee1ffc4147D9Ae026C2f170436bB8Bb47",
      "libraries": { "Cron": "0x9F0660311430F0a6a17f8782E77DBC7C16C1BFe2" },
      "transactionHash": "0x78517d050a0f0231f156499151a56426a43c0ae7043314800172b930cb680533",
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldAdmin", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
          ],
          "name": "AdminOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "CreatorFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldCreator", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newCreator", "type": "address" }
          ],
          "name": "CreatorOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }
          ],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "string", "name": "encodedCron", "type": "string" }
          ],
          "name": "EncodedCronUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldFactory", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newFactory", "type": "address" }
          ],
          "name": "FactoryOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundCount", "type": "uint256" }
          ],
          "name": "GameLost",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "claimer", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountClaimed", "type": "uint256" }
          ],
          "name": "GamePrizeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameSplitted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "winnersCounter", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameWon",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }],
          "name": "PlayedRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "position", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "standard", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "contractAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "name": "PrizeAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "RegisteredForGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "resetId", "type": "uint256" }
          ],
          "name": "ResetGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "StartedGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimedByFactory",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }
          ],
          "name": "VoteToSplitPot",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [],
          "name": "MAX_CREATOR_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_TREASURY_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "addPrizes",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        { "inputs": [], "name": "claimCreatorFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "claimPrize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creator",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "encodedCron",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "factory",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getGameData",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "playerAddressesCount", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "bool", "name": "isPaused", "type": "bool" },
                { "internalType": "bool", "name": "isInProgress", "type": "bool" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "admin", "type": "address" },
                { "internalType": "string", "name": "encodedCron", "type": "string" }
              ],
              "internalType": "struct GameV1Interface.GameData",
              "name": "gameData",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_player", "type": "address" }],
          "name": "getPlayer",
          "outputs": [
            {
              "components": [
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
                { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
                { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
                { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "hasLost", "type": "bool" },
                { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Player",
              "name": "gamePlayer",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getPlayerAddresses",
          "outputs": [{ "internalType": "address[]", "name": "gamePlayerAddresses", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getPrizes",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "gamePrizes",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getRemainingPlayersCount",
          "outputs": [{ "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getWinners",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "amountWon", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "prizeClaimed", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Winner[]",
              "name": "gameWinners",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "id",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "owner", "type": "address" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "cronUpkeep", "type": "address" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "version", "type": "uint256" },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "string", "name": "encodedCron", "type": "string" },
                {
                  "components": [
                    { "internalType": "uint256", "name": "position", "type": "uint256" },
                    { "internalType": "uint256", "name": "amount", "type": "uint256" },
                    { "internalType": "uint256", "name": "standard", "type": "uint256" },
                    { "internalType": "address", "name": "contractAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                  ],
                  "internalType": "struct GameV1Interface.Prize[]",
                  "name": "prizes",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct GameV1Interface.Initialization",
              "name": "_initialization",
              "type": "tuple"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isAllPlayersSplitOk",
          "outputs": [{ "internalType": "bool", "name": "isSplitOk", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGameAllPrizesStandard",
          "outputs": [{ "internalType": "bool", "name": "isStandard", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGamePayable",
          "outputs": [{ "internalType": "bool", "name": "isPayable", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isInProgress",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxPlayers",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "playRound", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "playTimeRange",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "playerAddresses",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "name": "players",
          "outputs": [
            { "internalType": "address", "name": "playerAddress", "type": "address" },
            { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
            { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
            { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
            { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
            { "internalType": "uint256", "name": "position", "type": "uint256" },
            { "internalType": "bool", "name": "hasLost", "type": "bool" },
            { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "registerForGame", "outputs": [], "stateMutability": "payable", "type": "function" },
        {
          "inputs": [],
          "name": "registrationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "roundId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_creatorFee", "type": "uint256" }],
          "name": "setCreatorFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "setCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "_encodedCron", "type": "string" }],
          "name": "setEncodedCron",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" }],
          "name": "setMaxPlayers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "_name", "type": "bytes32" }],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" }],
          "name": "setTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_creator", "type": "address" }],
          "name": "transferCreatorOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }],
          "name": "transferFactoryOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "triggerDailyCheckpoint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "version",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "voteToSplitPot", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_receiver", "type": "address" }],
          "name": "withdrawFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-23T12:27:41.767Z",
      "olds": []
    },
    "CronExternal": {
      "address": "0x9F0660311430F0a6a17f8782E77DBC7C16C1BFe2",
      "libraries": {},
      "transactionHash": "0x78eceafaacfa97980c0c98c324cba3e9ac8bacad71854b0f7e15092e2334e3b0",
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "field", "type": "string" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "InvalidField",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "string", "name": "reason", "type": "string" }],
          "name": "InvalidSpec",
          "type": "error"
        },
        { "inputs": [], "name": "ListTooLarge", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "lastTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            },
            { "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "matches",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "nextTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "toCronString",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toEncodedSpec",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toSpec",
          "outputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "date": "2022-11-23T12:27:41.770Z",
      "olds": []
    },
    "CronUpkeep": {
      "address": "0x6c7D3691C790953c00e5b9Ea7C18c046ECC6AD7B",
      "libraries": { "Cron": "0x9F0660311430F0a6a17f8782E77DBC7C16C1BFe2" },
      "transactionHash": "0x61b394d08ebe0e55ba7ee052a1c0bbb058ccb6e66c8a445d4c9b887f68a7f6be",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "maxJobs", "type": "uint256" },
            { "internalType": "bytes", "name": "firstJob", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "CallFailed",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobIDNotFound",
          "type": "error"
        },
        { "inputs": [], "name": "ExceedsMaxJobs", "type": "error" },
        { "inputs": [], "name": "InvalidHandler", "type": "error" },
        { "inputs": [], "name": "OnlySimulatedBackend", "type": "error" },
        { "inputs": [], "name": "TickDoesntMatchSpec", "type": "error" },
        { "inputs": [], "name": "TickInFuture", "type": "error" },
        { "inputs": [], "name": "TickTooOld", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobDeleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "CronJobExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "inputs": [], "name": "acceptOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "addDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "name": "checkUpkeep",
          "outputs": [
            { "internalType": "bool", "name": "", "type": "bool" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "bytes", "name": "encodedCronSpec", "type": "bytes" }
          ],
          "name": "createCronJobFromEncodedSpec",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "deleteCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getActiveCronJobIDs",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "getCronJob",
          "outputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "string", "name": "cronString", "type": "string" },
            { "internalType": "uint256", "name": "nextTick", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDelegators",
          "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getNextCronJobIDs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "performData", "type": "bytes" }],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "removeDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "s_maxJobs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "to", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "newTarget", "type": "address" },
            { "internalType": "bytes", "name": "newHandler", "type": "bytes" },
            { "internalType": "bytes", "name": "newEncodedCronSpec", "type": "bytes" }
          ],
          "name": "updateCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "date": "2022-11-23T12:27:41.774Z",
      "olds": []
    },
    "MultiCall3": {
      "address": "0x41b0b067797B8DfFb2299c133C78aae08C0fDb86",
      "libraries": {},
      "transactionHash": "0xb885d5558cf044e288c7573ead7751b450e2dbc98864493ce658da9a049dd932",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes[]", "name": "returnData", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "uint256", "name": "value", "type": "uint256" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3Value[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3Value",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "blockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBasefee",
          "outputs": [{ "internalType": "uint256", "name": "basefee", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "name": "getBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBlockNumber",
          "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getChainId",
          "outputs": [{ "internalType": "uint256", "name": "chainid", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockCoinbase",
          "outputs": [{ "internalType": "address", "name": "coinbase", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockDifficulty",
          "outputs": [{ "internalType": "uint256", "name": "difficulty", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockGasLimit",
          "outputs": [{ "internalType": "uint256", "name": "gaslimit", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockTimestamp",
          "outputs": [{ "internalType": "uint256", "name": "timestamp", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }],
          "name": "getEthBalance",
          "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLastBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryAggregate",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryBlockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "date": "2022-11-23T12:27:41.778Z",
      "olds": []
    }
  },
  "31337": {
    "GameFactory": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "libraries": {},
      "transactionHash": "0x8c1ec6f03b6742e37df902ac5ebc69b6dabd60318c46185d5a978aa05f4f4525",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_game", "type": "address" },
            { "internalType": "address", "name": "_cronUpkeep", "type": "address" },
            { "internalType": "uint256", "name": "_gameCreationAmount", "type": "uint256" },
            { "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "nextId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "gameAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "implementationVersion", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "creatorAddress", "type": "address" }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }],
          "name": "addAuthorizedAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "authorizedAmounts",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_name", "type": "bytes32" },
            { "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" },
            { "internalType": "uint256", "name": "_playTimeRange", "type": "uint256" },
            { "internalType": "uint256", "name": "_registrationAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" },
            { "internalType": "uint256", "name": "_creatorFee", "type": "uint256" },
            { "internalType": "string", "name": "_encodedCron", "type": "string" },
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "createNewGame",
          "outputs": [{ "internalType": "address", "name": "game", "type": "address" }],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "deployedGames",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "versionId", "type": "uint256" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" },
            { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "gameCreationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "games",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_authorizedAmount", "type": "uint256" }],
          "name": "getAuthorizedAmount",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "bool", "name": "isUsed", "type": "bool" }
              ],
              "internalType": "struct GameFactory.AuthorizedAmount",
              "name": "gameAuthorisedAmount",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getAuthorizedAmounts",
          "outputs": [{ "internalType": "uint256[]", "name": "gameAuthorisedAmounts", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDeployedGames",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "versionId", "type": "uint256" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "deployedAddress", "type": "address" },
                { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
              ],
              "internalType": "struct GameFactory.Game[]",
              "name": "allGames",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestVersionId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "pauseAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "resumeAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_game", "type": "address" }],
          "name": "setNewGameV1",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "updateCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "usedAuthorizedAmounts",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bool", "name": "isUsed", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "withdrawFunds", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-26T14:42:51.089Z",
      "olds": []
    },
    "GameV1": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "libraries": { "Cron": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0" },
      "transactionHash": "0x38304cceb93c2df6b8973bd073f370a46fdd4bb09be091b23df4dea6dafaf7c0",
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldAdmin", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
          ],
          "name": "AdminOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "CreatorFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldCreator", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newCreator", "type": "address" }
          ],
          "name": "CreatorOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }
          ],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "string", "name": "encodedCron", "type": "string" }
          ],
          "name": "EncodedCronUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldFactory", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newFactory", "type": "address" }
          ],
          "name": "FactoryOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundCount", "type": "uint256" }
          ],
          "name": "GameLost",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "claimer", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountClaimed", "type": "uint256" }
          ],
          "name": "GamePrizeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameSplitted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "winnersCounter", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameWon",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }],
          "name": "PlayedRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "position", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "standard", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "contractAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "name": "PrizeAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "RegisteredForGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "resetId", "type": "uint256" }
          ],
          "name": "ResetGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "StartedGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimedByFactory",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }
          ],
          "name": "VoteToSplitPot",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [],
          "name": "MAX_CREATOR_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_TREASURY_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "addPrizes",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        { "inputs": [], "name": "claimCreatorFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "claimPrize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creator",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "encodedCron",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "factory",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getGameData",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "playerAddressesCount", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "bool", "name": "isPaused", "type": "bool" },
                { "internalType": "bool", "name": "isInProgress", "type": "bool" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "admin", "type": "address" },
                { "internalType": "string", "name": "encodedCron", "type": "string" }
              ],
              "internalType": "struct GameV1Interface.GameData",
              "name": "gameData",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_player", "type": "address" }],
          "name": "getPlayer",
          "outputs": [
            {
              "components": [
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
                { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
                { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
                { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "hasLost", "type": "bool" },
                { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Player",
              "name": "gamePlayer",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getPlayerAddresses",
          "outputs": [{ "internalType": "address[]", "name": "gamePlayerAddresses", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getPrizes",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "gamePrizes",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getRemainingPlayersCount",
          "outputs": [{ "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getWinners",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "amountWon", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "prizeClaimed", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Winner[]",
              "name": "gameWinners",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "id",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "owner", "type": "address" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "cronUpkeep", "type": "address" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "version", "type": "uint256" },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "string", "name": "encodedCron", "type": "string" },
                {
                  "components": [
                    { "internalType": "uint256", "name": "position", "type": "uint256" },
                    { "internalType": "uint256", "name": "amount", "type": "uint256" },
                    { "internalType": "uint256", "name": "standard", "type": "uint256" },
                    { "internalType": "address", "name": "contractAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                  ],
                  "internalType": "struct GameV1Interface.Prize[]",
                  "name": "prizes",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct GameV1Interface.Initialization",
              "name": "_initialization",
              "type": "tuple"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isAllPlayersSplitOk",
          "outputs": [{ "internalType": "bool", "name": "isSplitOk", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGameAllPrizesStandard",
          "outputs": [{ "internalType": "bool", "name": "isStandard", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGamePayable",
          "outputs": [{ "internalType": "bool", "name": "isPayable", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isInProgress",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxPlayers",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "playRound", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "playTimeRange",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "playerAddresses",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "name": "players",
          "outputs": [
            { "internalType": "address", "name": "playerAddress", "type": "address" },
            { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
            { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
            { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
            { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
            { "internalType": "uint256", "name": "position", "type": "uint256" },
            { "internalType": "bool", "name": "hasLost", "type": "bool" },
            { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "registerForGame", "outputs": [], "stateMutability": "payable", "type": "function" },
        {
          "inputs": [],
          "name": "registrationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "roundId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_creatorFee", "type": "uint256" }],
          "name": "setCreatorFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "setCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "_encodedCron", "type": "string" }],
          "name": "setEncodedCron",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" }],
          "name": "setMaxPlayers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "_name", "type": "bytes32" }],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" }],
          "name": "setTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_creator", "type": "address" }],
          "name": "transferCreatorOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }],
          "name": "transferFactoryOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "triggerDailyCheckpoint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "version",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "voteToSplitPot", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_receiver", "type": "address" }],
          "name": "withdrawFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "date": "2022-11-26T14:42:51.093Z",
      "olds": []
    },
    "CronExternal": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "libraries": {},
      "transactionHash": "0xc6209c5c013870559ba0f768cfc96e6abe0a79b9467a8c988baad6ce74a9c61c",
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "field", "type": "string" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "InvalidField",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "string", "name": "reason", "type": "string" }],
          "name": "InvalidSpec",
          "type": "error"
        },
        { "inputs": [], "name": "ListTooLarge", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "lastTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            },
            { "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "matches",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "nextTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "toCronString",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toEncodedSpec",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toSpec",
          "outputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "date": "2022-11-26T14:42:51.095Z",
      "olds": []
    },
    "CronUpkeep": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "libraries": { "Cron": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0" },
      "transactionHash": "0x591e5449a3eedd3ee0a8e0523ee50d85f7b5b3b7ec79ce7517e04a7ee64c4fd4",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "maxJobs", "type": "uint256" },
            { "internalType": "bytes", "name": "firstJob", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "CallFailed",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobIDNotFound",
          "type": "error"
        },
        { "inputs": [], "name": "ExceedsMaxJobs", "type": "error" },
        { "inputs": [], "name": "InvalidHandler", "type": "error" },
        { "inputs": [], "name": "OnlySimulatedBackend", "type": "error" },
        { "inputs": [], "name": "TickDoesntMatchSpec", "type": "error" },
        { "inputs": [], "name": "TickInFuture", "type": "error" },
        { "inputs": [], "name": "TickTooOld", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobDeleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "CronJobExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "inputs": [], "name": "acceptOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "addDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "name": "checkUpkeep",
          "outputs": [
            { "internalType": "bool", "name": "", "type": "bool" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "bytes", "name": "encodedCronSpec", "type": "bytes" }
          ],
          "name": "createCronJobFromEncodedSpec",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "deleteCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getActiveCronJobIDs",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "getCronJob",
          "outputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "string", "name": "cronString", "type": "string" },
            { "internalType": "uint256", "name": "nextTick", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDelegators",
          "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getNextCronJobIDs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "performData", "type": "bytes" }],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "removeDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "s_maxJobs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "to", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "newTarget", "type": "address" },
            { "internalType": "bytes", "name": "newHandler", "type": "bytes" },
            { "internalType": "bytes", "name": "newEncodedCronSpec", "type": "bytes" }
          ],
          "name": "updateCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "date": "2022-11-26T14:42:51.097Z",
      "olds": []
    },
    "MultiCall3": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "libraries": {},
      "transactionHash": "0x948c6050467e45aeb451cbd990561452e3d80efc17bfd1a565f1083f4cef1c3b",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes[]", "name": "returnData", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "uint256", "name": "value", "type": "uint256" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3Value[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3Value",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "blockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBasefee",
          "outputs": [{ "internalType": "uint256", "name": "basefee", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "name": "getBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBlockNumber",
          "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getChainId",
          "outputs": [{ "internalType": "uint256", "name": "chainid", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockCoinbase",
          "outputs": [{ "internalType": "address", "name": "coinbase", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockDifficulty",
          "outputs": [{ "internalType": "uint256", "name": "difficulty", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockGasLimit",
          "outputs": [{ "internalType": "uint256", "name": "gaslimit", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockTimestamp",
          "outputs": [{ "internalType": "uint256", "name": "timestamp", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }],
          "name": "getEthBalance",
          "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLastBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryAggregate",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryBlockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "date": "2022-11-26T14:42:51.099Z",
      "olds": []
    }
  },
  "80001": {
    "GameFactory": {
      "address": "0x5A56D0D7BD2Db9d96E37F9187CbeE398315a57e2",
      "libraries": {},
      "transactionHash": "0x943e621042ac0dfc23504bac1679ec1dba042808b6161b64e21d1a6c9f9e8b24",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_game", "type": "address" },
            { "internalType": "address", "name": "_cronUpkeep", "type": "address" },
            { "internalType": "uint256", "name": "_gameCreationAmount", "type": "uint256" },
            { "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "nextId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "gameAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "implementationVersion", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "creatorAddress", "type": "address" }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "_authorizedAmounts", "type": "uint256[]" }],
          "name": "addAuthorizedAmounts",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "authorizedAmounts",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_name", "type": "bytes32" },
            { "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" },
            { "internalType": "uint256", "name": "_playTimeRange", "type": "uint256" },
            { "internalType": "uint256", "name": "_registrationAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" },
            { "internalType": "uint256", "name": "_creatorFee", "type": "uint256" },
            { "internalType": "string", "name": "_encodedCron", "type": "string" },
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "createNewGame",
          "outputs": [{ "internalType": "address", "name": "game", "type": "address" }],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "deployedGames",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "versionId", "type": "uint256" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" },
            { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "gameCreationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "games",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "deployedAddress", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_authorizedAmount", "type": "uint256" }],
          "name": "getAuthorizedAmount",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "bool", "name": "isUsed", "type": "bool" }
              ],
              "internalType": "struct GameFactory.AuthorizedAmount",
              "name": "gameAuthorisedAmount",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getAuthorizedAmounts",
          "outputs": [{ "internalType": "uint256[]", "name": "gameAuthorisedAmounts", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDeployedGames",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "versionId", "type": "uint256" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "deployedAddress", "type": "address" },
                { "internalType": "uint256", "name": "gameCreationAmount", "type": "uint256" }
              ],
              "internalType": "struct GameFactory.Game[]",
              "name": "allGames",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestVersionId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "pauseAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "resumeAllGamesAndFactory",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_game", "type": "address" }],
          "name": "setNewGameV1",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "updateCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "usedAuthorizedAmounts",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bool", "name": "isUsed", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "withdrawFunds", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "olds": [],
      "date": "2022-11-22T21:28:53.878Z"
    },
    "GameV1": {
      "address": "0x7DA3e4C4B95CfDE7d919104f63A006697018D4f0",
      "libraries": { "Cron": "0x039B8906C439756969928FdAa7c0a78Bd302201c" },
      "transactionHash": "0x20415eed28517e2a285d835978ff85783ac61308a822ede6b3d232f94546d21c",
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldAdmin", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
          ],
          "name": "AdminOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "CreatorFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldCreator", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newCreator", "type": "address" }
          ],
          "name": "CreatorOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "cronUpkeep", "type": "address" }
          ],
          "name": "CronUpkeepUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "jobId", "type": "uint256" },
            { "indexed": false, "internalType": "string", "name": "encodedCron", "type": "string" }
          ],
          "name": "EncodedCronUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "oldFactory", "type": "address" },
            { "indexed": false, "internalType": "address", "name": "newFactory", "type": "address" }
          ],
          "name": "FactoryOwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "receiver", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "FailedTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundCount", "type": "uint256" }
          ],
          "name": "GameLost",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "claimer", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountClaimed", "type": "uint256" }
          ],
          "name": "GamePrizeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameSplitted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "winnersCounter", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amountWon", "type": "uint256" }
          ],
          "name": "GameWon",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }],
          "name": "PlayedRound",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "position", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "standard", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "contractAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "name": "PrizeAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "RegisteredForGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "resetId", "type": "uint256" }
          ],
          "name": "ResetGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "timelock", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "playersCount", "type": "uint256" }
          ],
          "name": "StartedGame",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "name": "TreasuryFeeClaimedByFactory",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": false, "internalType": "uint256", "name": "roundId", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "playerAddress", "type": "address" }
          ],
          "name": "VoteToSplitPot",
          "type": "event"
        },
        { "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [],
          "name": "MAX_CREATOR_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_TREASURY_FEE",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "_prizes",
              "type": "tuple[]"
            }
          ],
          "name": "addPrizes",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        { "inputs": [], "name": "claimCreatorFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "claimPrize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creator",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "creatorFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cronUpkeep",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "encodedCron",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "factory",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getGameData",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "playerAddressesCount", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "bool", "name": "isPaused", "type": "bool" },
                { "internalType": "bool", "name": "isInProgress", "type": "bool" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "admin", "type": "address" },
                { "internalType": "string", "name": "encodedCron", "type": "string" }
              ],
              "internalType": "struct GameV1Interface.GameData",
              "name": "gameData",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_player", "type": "address" }],
          "name": "getPlayer",
          "outputs": [
            {
              "components": [
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
                { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
                { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
                { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "hasLost", "type": "bool" },
                { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Player",
              "name": "gamePlayer",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getPlayerAddresses",
          "outputs": [{ "internalType": "address[]", "name": "gamePlayerAddresses", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getPrizes",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "uint256", "name": "standard", "type": "uint256" },
                { "internalType": "address", "name": "contractAddress", "type": "address" },
                { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
              ],
              "internalType": "struct GameV1Interface.Prize[]",
              "name": "gamePrizes",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getRemainingPlayersCount",
          "outputs": [{ "internalType": "uint256", "name": "remainingPlayersCount", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_roundId", "type": "uint256" }],
          "name": "getWinners",
          "outputs": [
            {
              "components": [
                { "internalType": "uint256", "name": "roundId", "type": "uint256" },
                { "internalType": "address", "name": "playerAddress", "type": "address" },
                { "internalType": "uint256", "name": "amountWon", "type": "uint256" },
                { "internalType": "uint256", "name": "position", "type": "uint256" },
                { "internalType": "bool", "name": "prizeClaimed", "type": "bool" }
              ],
              "internalType": "struct GameV1Interface.Winner[]",
              "name": "gameWinners",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "id",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "owner", "type": "address" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "address", "name": "cronUpkeep", "type": "address" },
                { "internalType": "bytes32", "name": "name", "type": "bytes32" },
                { "internalType": "uint256", "name": "version", "type": "uint256" },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                { "internalType": "uint256", "name": "playTimeRange", "type": "uint256" },
                { "internalType": "uint256", "name": "maxPlayers", "type": "uint256" },
                { "internalType": "uint256", "name": "registrationAmount", "type": "uint256" },
                { "internalType": "uint256", "name": "treasuryFee", "type": "uint256" },
                { "internalType": "uint256", "name": "creatorFee", "type": "uint256" },
                { "internalType": "string", "name": "encodedCron", "type": "string" },
                {
                  "components": [
                    { "internalType": "uint256", "name": "position", "type": "uint256" },
                    { "internalType": "uint256", "name": "amount", "type": "uint256" },
                    { "internalType": "uint256", "name": "standard", "type": "uint256" },
                    { "internalType": "address", "name": "contractAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                  ],
                  "internalType": "struct GameV1Interface.Prize[]",
                  "name": "prizes",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct GameV1Interface.Initialization",
              "name": "_initialization",
              "type": "tuple"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isAllPlayersSplitOk",
          "outputs": [{ "internalType": "bool", "name": "isSplitOk", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGameAllPrizesStandard",
          "outputs": [{ "internalType": "bool", "name": "isStandard", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isGamePayable",
          "outputs": [{ "internalType": "bool", "name": "isPayable", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "isInProgress",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxPlayers",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "playRound", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "playTimeRange",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "name": "playerAddresses",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "name": "players",
          "outputs": [
            { "internalType": "address", "name": "playerAddress", "type": "address" },
            { "internalType": "uint256", "name": "roundRangeLowerLimit", "type": "uint256" },
            { "internalType": "uint256", "name": "roundRangeUpperLimit", "type": "uint256" },
            { "internalType": "bool", "name": "hasPlayedRound", "type": "bool" },
            { "internalType": "uint256", "name": "roundCount", "type": "uint256" },
            { "internalType": "uint256", "name": "position", "type": "uint256" },
            { "internalType": "bool", "name": "hasLost", "type": "bool" },
            { "internalType": "bool", "name": "isSplitOk", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "registerForGame", "outputs": [], "stateMutability": "payable", "type": "function" },
        {
          "inputs": [],
          "name": "registrationAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "roundId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_creatorFee", "type": "uint256" }],
          "name": "setCreatorFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_cronUpkeep", "type": "address" }],
          "name": "setCronUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "_encodedCron", "type": "string" }],
          "name": "setEncodedCron",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_maxPlayers", "type": "uint256" }],
          "name": "setMaxPlayers",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "_name", "type": "bytes32" }],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_treasuryFee", "type": "uint256" }],
          "name": "setTreasuryFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_adminAddress", "type": "address" }],
          "name": "transferAdminOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_creator", "type": "address" }],
          "name": "transferCreatorOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }],
          "name": "transferFactoryOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryAmount",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "treasuryFee",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "triggerDailyCheckpoint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "version",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "voteToSplitPot", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "_receiver", "type": "address" }],
          "name": "withdrawFunds",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "stateMutability": "payable", "type": "receive" }
      ],
      "olds": [],
      "date": "2022-11-22T21:28:53.884Z"
    },
    "CronExternal": {
      "address": "0x039B8906C439756969928FdAa7c0a78Bd302201c",
      "libraries": {},
      "transactionHash": "0xb8a2d52f46162cf6fd56bad4e905319b1a483a62cc8a2566d1b1825fba784d77",
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "field", "type": "string" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "InvalidField",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "string", "name": "reason", "type": "string" }],
          "name": "InvalidSpec",
          "type": "error"
        },
        { "inputs": [], "name": "ListTooLarge", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "lastTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            },
            { "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "matches",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "nextTick",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "spec",
              "type": "tuple"
            }
          ],
          "name": "toCronString",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toEncodedSpec",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "string", "name": "cronString", "type": "string" }],
          "name": "toSpec",
          "outputs": [
            {
              "components": [
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "minute",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "hour",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "day",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "month",
                  "type": "tuple"
                },
                {
                  "components": [
                    { "internalType": "enum FieldType", "name": "fieldType", "type": "FieldType" },
                    { "internalType": "uint8", "name": "singleValue", "type": "uint8" },
                    { "internalType": "uint8", "name": "interval", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeStart", "type": "uint8" },
                    { "internalType": "uint8", "name": "rangeEnd", "type": "uint8" },
                    { "internalType": "uint8", "name": "listLength", "type": "uint8" },
                    { "internalType": "uint8[26]", "name": "list", "type": "uint8[26]" }
                  ],
                  "internalType": "struct Field",
                  "name": "dayOfWeek",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Spec",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "olds": [],
      "date": "2022-11-22T21:28:53.889Z"
    },
    "CronUpkeep": {
      "address": "0x8a88c6EEd4DF773643b1A2EEAA0CB128Ed18820A",
      "libraries": { "Cron": "0x039B8906C439756969928FdAa7c0a78Bd302201c" },
      "transactionHash": "0xfcbf34dd96fe610ac305643b0f36edd8396a66fa5ef5c4b21d3f9ba1b6e5a0b2",
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "maxJobs", "type": "uint256" },
            { "internalType": "bytes", "name": "firstJob", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "name": "CallFailed",
          "type": "error"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobIDNotFound",
          "type": "error"
        },
        { "inputs": [], "name": "ExceedsMaxJobs", "type": "error" },
        { "inputs": [], "name": "InvalidHandler", "type": "error" },
        { "inputs": [], "name": "OnlySimulatedBackend", "type": "error" },
        { "inputs": [], "name": "TickDoesntMatchSpec", "type": "error" },
        { "inputs": [], "name": "TickInFuture", "type": "error" },
        { "inputs": [], "name": "TickTooOld", "type": "error" },
        { "inputs": [], "name": "UnknownFieldType", "type": "error" },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "CronJobDeleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256" }
          ],
          "name": "CronJobExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "uint256", "name": "id", "type": "uint256" },
            { "indexed": false, "internalType": "address", "name": "target", "type": "address" },
            { "indexed": false, "internalType": "bytes", "name": "handler", "type": "bytes" }
          ],
          "name": "CronJobUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "target", "type": "address" }],
          "name": "DelegatorRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
            { "indexed": true, "internalType": "address", "name": "to", "type": "address" }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }],
          "name": "Unpaused",
          "type": "event"
        },
        { "inputs": [], "name": "acceptOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "addDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
          "name": "checkUpkeep",
          "outputs": [
            { "internalType": "bool", "name": "", "type": "bool" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "bytes", "name": "encodedCronSpec", "type": "bytes" }
          ],
          "name": "createCronJobFromEncodedSpec",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "deleteCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getActiveCronJobIDs",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
          "name": "getCronJob",
          "outputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "handler", "type": "bytes" },
            { "internalType": "string", "name": "cronString", "type": "string" },
            { "internalType": "uint256", "name": "nextTick", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getDelegators",
          "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getNextCronJobIDs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        { "inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "performData", "type": "bytes" }],
          "name": "performUpkeep",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "delegator", "type": "address" }],
          "name": "removeDelegator",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "s_maxJobs",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "to", "type": "address" }],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        { "inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "address", "name": "newTarget", "type": "address" },
            { "internalType": "bytes", "name": "newHandler", "type": "bytes" },
            { "internalType": "bytes", "name": "newEncodedCronSpec", "type": "bytes" }
          ],
          "name": "updateCronJob",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "olds": [],
      "date": "2022-11-22T21:28:53.893Z"
    },
    "MultiCall3": {
      "address": "0x7858258c475BDE1b07451A9e76C65dc078584b60",
      "libraries": {},
      "transactionHash": "0x22682d35eaddf96bb9a0ebe4fab7b255a0eda48206e982ed7fdc06003c26ae03",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes[]", "name": "returnData", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bool", "name": "allowFailure", "type": "bool" },
                { "internalType": "uint256", "name": "value", "type": "uint256" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call3Value[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "aggregate3Value",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "blockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBasefee",
          "outputs": [{ "internalType": "uint256", "name": "basefee", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "name": "getBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBlockNumber",
          "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getChainId",
          "outputs": [{ "internalType": "uint256", "name": "chainid", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockCoinbase",
          "outputs": [{ "internalType": "address", "name": "coinbase", "type": "address" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockDifficulty",
          "outputs": [{ "internalType": "uint256", "name": "difficulty", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockGasLimit",
          "outputs": [{ "internalType": "uint256", "name": "gaslimit", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getCurrentBlockTimestamp",
          "outputs": [{ "internalType": "uint256", "name": "timestamp", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }],
          "name": "getEthBalance",
          "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLastBlockHash",
          "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryAggregate",
          "outputs": [
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "requireSuccess", "type": "bool" },
            {
              "components": [
                { "internalType": "address", "name": "target", "type": "address" },
                { "internalType": "bytes", "name": "callData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]"
            }
          ],
          "name": "tryBlockAndAggregate",
          "outputs": [
            { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
            { "internalType": "bytes32", "name": "blockHash", "type": "bytes32" },
            {
              "components": [
                { "internalType": "bool", "name": "success", "type": "bool" },
                { "internalType": "bytes", "name": "returnData", "type": "bytes" }
              ],
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "olds": [],
      "date": "2022-11-22T21:28:53.897Z"
    }
  }
}
