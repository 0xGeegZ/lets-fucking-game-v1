/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  Cron,
  CronInterface,
} from "../../../../../../../@chainlink/contracts/src/v0.8/libraries/external/Cron";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidSpec",
    type: "error",
  },
  {
    inputs: [],
    name: "ListTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownFieldType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "lastTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "nextTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "toCronString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toEncodedSpec",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61317361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061007c5760003560e01c8063b70d69701161005a578063b70d6970146100e7578063bddee373146100fa578063e04b97691461011d57600080fd5b806334373a3b1461008157806336d24def146100a7578063a1ab24f4146100c7575b600080fd5b61009461008f366004612637565b610130565b6040519081526020015b60405180910390f35b6100ba6100b53660046125c5565b61014f565b60405161009e9190612c7a565b6100da6100d5366004612637565b61019d565b60405161009e9190612be7565b6100946100f5366004612637565b6101b6565b61010d610108366004612654565b6101cf565b604051901515815260200161009e565b6100da61012b3660046125c5565b6101ea565b600061014961014436849003840184612681565b61022b565b92915050565b610157612397565b61019683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103dd92505050565b9392505050565b60606101496101b136849003840184612681565b61062a565b60006101496101ca36849003840184612681565b610697565b6000610196826101e436869003860186612681565b9061082f565b606061019683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108a292505050565b600080610237426108bd565b90506000610244426109b2565b90506000610251426109c7565b9050600061025e426109dc565b9050600061026b42610a00565b905060005b600c8560ff16116103c757610289886060015186610a0e565b61029e576001935060009250600091506103b5565b60006102aa8688610b89565b90505b8060ff168560ff16116103af576102c8896040015186610a0e565b6102d957600093506000925061039d565b6102ec6102e7888888610c4f565b610c61565b91506102fc896080015183610a0e565b61030d57600093506000925061039d565b60188460ff16101561039857610327896020015185610a0e565b6103345760009250610386565b603c8360ff16101561038157885161034c9084610a0e565b6103555761036f565b6103628787878787610c7d565b9998505050505050505050565b8261037981612fdb565b935050610334565b600092505b8361039081612fdb565b94505061030d565b600093505b846103a781612fdb565b9550506102ad565b60019450505b846103bf81612fdb565b955050610270565b60019450856103d581612f9e565b965050610270565b6103e5612397565b604080518082018252600181527f2000000000000000000000000000000000000000000000000000000000000000602080830191825283518085018552600080825290820181905284518086018652935184528382019290925283518085018552828152810191909152825180840190935284518352848101908301529061046d8183610c98565b6004146104db576040517faf64694e00000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f342073706163657320726571756972656400000000000000000000000000000060448201526064015b60405180910390fd5b60006104e78284610d39565b905060006104f58385610d39565b905060006105038486610d39565b905060006105118587610d39565b905061051c84610d58565b158061052e575061052c83610d58565b155b8061053f575061053d82610d58565b155b80610550575061054e81610d58565b155b80610561575061055f85610d58565b155b156105c8576040517faf64694e00000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f736f6d65206669656c6473206d697373696e670000000000000000000000000060448201526064016104d2565b61061e6040518060a001604052806105df87610e31565b81526020016105ed86610e31565b81526020016105fb85610e31565b815260200161060984610e31565b815260200161061788610e31565b905261111f565b98975050505050505050565b606061063982600001516112a1565b61064683602001516112a1565b61065384604001516112a1565b61066085606001516112a1565b61066d86608001516112a1565b604051602001610681959493929190612876565b6040516020818303038152906040529050919050565b6000806106a3426108bd565b905060006106b0426109b2565b905060006106bd426109c7565b905060006106ca426109dc565b905060006106d742610a00565b90506000805b60ff861615610819576106f4896060015187610a0e565b610708575060179250603b91506001610807565b801561071b576107188688610b89565b94505b60ff85161561080357610732896040015186610a0e565b6107435760179350603b92506107f1565b6107516102e7888888610c4f565b9150610761896080015183610a0e565b6107725760179350603b92506107f1565b610780896020015185610a0e565b61079a57603b925060ff8416610795576107ec565b6107da565b88516107a69084610a0e565b6103555760ff83166107b7576107c9565b826107c181612f8b565b93505061079a565b603b925060ff84166107da576107ec565b836107e481612f8b565b945050610772565b601793505b846107fb81612f8b565b95505061071b565b5060015b8561081181612f8b565b9650506106dd565b600c95508661082781612f56565b9750506106dd565b60008061083b83611442565b905061084f84606001518260200151610a0e565b8015610868575061086884604001518260400151610a0e565b8015610881575061088184602001518260600151610a0e565b801561089a575061089a84600001518260800151610a0e565b949350505050565b60606108ad826103dd565b6040516020016106819190612c7a565b60008080806108d06301e1338086612d1a565b6108dc906107b2612cdd565b91506108e96107b261162a565b6108f68361ffff1661162a565b6109009190612ef0565b9050610910816301e28500612e19565b61091a9084612cdd565b9250806109296107b284612ecd565b61ffff166109379190612ef0565b610945906301e13380612e19565b61094f9084612cdd565b92505b848311156109aa5761096d610968600184612ecd565b61166f565b15610987576109806301e2850084612ef0565b9250610998565b6109956301e1338084612ef0565b92505b6109a3600183612ecd565b9150610952565b509392505050565b60006109bd82611442565b6020015192915050565b60006109d282611442565b6040015192915050565b60006018603c6109ec8185612d1a565b6109f69190612d1a565b610149919061301c565b6000603c6109f68184612d1a565b60008083516004811115610a2457610a246130b0565b1415610a3257506001610149565b600283516004811115610a4757610a476130b0565b1415610a67576040830151610a5c9083613030565b60ff16159050610149565b600183516004811115610a7c57610a7c6130b0565b1415610a9657826020015160ff168260ff16149050610149565b600383516004811115610aab57610aab6130b0565b1415610adc57826060015160ff168260ff1610158015610ad55750826080015160ff168260ff1611155b9050610149565b600483516004811115610af157610af16130b0565b1415610b575760005b8360a0015160ff16811015610b4d578360c0015181601a8110610b1f57610b1f6130df565b602002015160ff168360ff161415610b3b576001915050610149565b80610b4581612fc0565b915050610afa565b5060009050610149565b6040517f7d8d432900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260ff1660011480610ba057508260ff166003145b80610bae57508260ff166005145b80610bbc57508260ff166007145b80610bca57508260ff166008145b80610bd857508260ff16600a145b80610be657508260ff16600c145b15610bf35750601f610149565b8260ff1660041480610c0857508260ff166006145b80610c1657508260ff166009145b80610c2457508260ff16600b145b15610c315750601e610149565b610c3a8261166f565b15610c475750601d610149565b50601c610149565b600061089a84848460008060006116ce565b60006007610c726201518084612d1a565b6109f6906004612cdd565b6000610c8e868686868660006116ce565b9695505050505050565b6000808260000151610cbc8560000151866020015186600001518760200151611872565b610cc69190612cdd565b90505b83516020850151610cda9190612cdd565b8111610d325781610cea81612fc0565b9250508260000151610d21856020015183610d059190612ef0565b8651610d119190612ef0565b8386600001518760200151611872565b610d2b9190612cdd565b9050610cc9565b5092915050565b6040805180820190915260008082526020820152610d32838383611993565b600080601f8360200151610d6c9190612ef0565b8351909150600090610d7e9083612cdd565b9050600092505b80821015610e2a57815160ff166080811015610dad57610da6600184612cdd565b9250610e17565b60e08160ff161015610dc457610da6600284612cdd565b60f08160ff161015610ddb57610da6600384612cdd565b60f88160ff161015610df257610da6600484612cdd565b60fc8160ff161015610e0957610da6600584612cdd565b610e14600684612cdd565b92505b5082610e2281612fc0565b935050610d85565b5050919050565b610e396123e3565b60408051808201825260018082527f2a000000000000000000000000000000000000000000000000000000000000006020808401918252845180860186526000808252908201819052855180870187529451855284820192909252845180860186528381527f2d00000000000000000000000000000000000000000000000000000000000000818301908152865180880188528481528301849052865180880188529151825281830152855180870187528481527f2f00000000000000000000000000000000000000000000000000000000000000818401908152875180890189528581528401859052875180890189529151825281840152865180880188529485527f2c0000000000000000000000000000000000000000000000000000000000000085840190815287518089018952858152840194909452865180880190975293518652908501919091529192610f906123e3565b610f9a8786611a3f565b15610fa85760008152610c8e565b610fb28785611a53565b15610ff157600381526000610fc78886610d39565b9050610fd281611a7a565b60ff166060830152610fe388611a7a565b60ff16608083015250610c8e565b610ffb8784611a53565b15611025576002815261100e8784610d39565b5061101887611a7a565b60ff166040820152610c8e565b61102f8783611a53565b15611100576004815260408051808201909152600080825260208201525b600061105889610d58565b11156110fa5760198260a0015160ff1611156110a0576040517f88b27b5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110aa8884610d39565b90506110b581611a7a565b8260c001518360a0015160ff16601a81106110d2576110d26130df565b60ff909216602092909202015260a082018051906110ef82612fdb565b60ff1690525061104d565b50610c8e565b6001815261110d87611a7a565b60ff1660208201529695505050505050565b611127612397565b61116e82608001516040518060400160405280600b81526020017f646179206f66207765656b00000000000000000000000000000000000000000081525060006006611b09565b6111b582606001516040518060400160405280600581526020017f6d6f6e74680000000000000000000000000000000000000000000000000000008152506001600c611b09565b60006111c48360600151611e14565b905061120c83604001516040518060400160405280600381526020017f6461790000000000000000000000000000000000000000000000000000000000815250600184611b09565b61125383602001516040518060400160405280600481526020017f686f75720000000000000000000000000000000000000000000000000000000081525060006017611b09565b61129a83600001516040518060400160405280600681526020017f6d696e75746500000000000000000000000000000000000000000000000000008152506000603b611b09565b5090919050565b60606000825160048111156112b8576112b86130b0565b14156112f757505060408051808201909152600181527f2a00000000000000000000000000000000000000000000000000000000000000602082015290565b60018251600481111561130c5761130c6130b0565b141561132257610149826020015160ff16611f61565b600382516004811115611337576113376130b0565b141561136e5761134d826060015160ff16611f61565b61135d836080015160ff16611f61565b604051602001610681929190612928565b600282516004811115611383576113836130b0565b14156113a957611399826040015160ff16611f61565b6040516020016106819190612a1f565b6004825160048111156113be576113be6130b0565b1415610b575760c08201516000906113df90825b602002015160ff16611f61565b905060015b8360a0015160ff16811015610d32578161140d8560c0015183601a81106113d2576113d26130df565b60405160200161141e92919061281e565b6040516020818303038152906040529150808061143a90612fc0565b9150506113e4565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052908080611486856108bd565b61ffff1684526114976107b261162a565b84516114a69061ffff1661162a565b6114b09190612ef0565b91506114c0826301e28500612e19565b6114ca9084612cdd565b9250816107b285600001516114df9190612ecd565b61ffff166114ed9190612ef0565b6114fb906301e13380612e19565b6115059084612cdd565b92506000600191505b600c8260ff161161157657611527828660000151610b89565b6115379060ff1662015180612e19565b9050856115448583612cdd565b11156115585760ff82166020860152611576565b6115628185612cdd565b93508161156e81612fdb565b92505061150e565b600191505b61158d85602001518660000151610b89565b60ff168260ff16116115dc57856115a78562015180612cdd565b11156115bb5760ff821660408601526115dc565b6115c86201518085612cdd565b9350816115d481612fdb565b92505061157b565b6115e5866109dc565b60ff1660608601526115f686610a00565b60ff166080860152611607866120be565b60ff1660a086015261161886610c61565b60ff1660c08601525092949350505050565b6000611637600183612ef0565b915061164561019083612d1a565b611650606484612d1a565b61165b600485612d1a565b6116659190612ef0565b6101499190612cdd565b600061167c600483612ffb565b61ffff161561168d57506000919050565b611698606483612ffb565b61ffff16156116a957506001919050565b6116b561019083612ffb565b61ffff16156116c657506000919050565b506001919050565b60006107b25b8761ffff168161ffff16101561172a576116ed8161166f565b15611707576117006301e2850083612cdd565b9150611718565b6117156301e1338083612cdd565b91505b8061172281612f9e565b9150506116d4565b611732612421565b601f815261173f8961166f565b1561175057601d6020820152611758565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff16101561180957806117c2600184612ecd565b61ffff16600c81106117d6576117d66130df565b60200201516117eb9060ff1662015180612e19565b6117f59084612cdd565b92508161180181612f9e565b9250506117a7565b611814600188612f07565b6118249060ff1662015180612e19565b61182e9084612cdd565b925061183f60ff8716610e10612e19565b6118499084612cdd565b925061185960ff8616603c612e19565b6118639084612cdd565b925061036260ff851684612cdd565b6000838186851161197e576020851161192c57600085156118be57600161189a876020612ef0565b6118a5906008612e19565b6118b0906002612d71565b6118ba9190612ef0565b1990505b845181166000876118cf8b8b612cdd565b6118d99190612ef0565b855190915083165b82811461191e57818610611906576118f98b8b612cdd565b965050505050505061089a565b8561191081612fc0565b9650508386511690506118e1565b85965050505050505061089a565b508383206000905b61193e8689612ef0565b821161197c578583208181141561195b578394505050505061089a565b611966600185612cdd565b935050818061197490612fc0565b925050611934565b505b6119888787612cdd565b979650505050505050565b604080518082019091526000808252602082015260006119c58560000151866020015186600001518760200151611872565b6020808701805191860191909152519091506119e19082612ef0565b8352845160208601516119f49190612cdd565b811415611a045760008552611a36565b83518351611a129190612cdd565b85518690611a21908390612ef0565b9052508351611a309082612cdd565b60208601525b50909392505050565b6000611a4b83836120cb565b159392505050565b6020808301518351835192840151600093611a7192918491906121a6565b14159392505050565b600080611a86836122b8565b90506000805b82518260ff16101561089a576000838360ff1681518110611aaf57611aaf6130df565b016020015160f81c905060308110801590611ace575060398160ff1611155b15611af657611ade603082612f07565b611ae983600a612e38565b611af39190612cf5565b91505b5081611b0181612fdb565b925050611a8c565b600084516004811115611b1e57611b1e6130b0565b1415611b2957611e0e565b600184516004811115611b3e57611b3e6130b0565b1415611be1578160ff16846020015160ff161080611b6557508060ff16846020015160ff16115b15611bdc576000611b788360ff16611f61565b611b848360ff16611f61565b604051602001611b95929190612ae5565b604051602081830303815290604052905083816040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d2929190612bfa565b611e0e565b600284516004811115611bf657611bf66130b0565b1415611c49576001846040015160ff161080611c1b57508060ff16846040015160ff16115b15611bdc576000611c2c6001611f61565b611c388360ff16611f61565b604051602001611b95929190612974565b600384516004811115611c5e57611c5e6130b0565b1415611cba578060ff16846080015160ff161180611c8a5750836060015160ff16846080015160ff1611155b15611bdc576000611c9d8360ff16611f61565b611ca98360ff16611f61565b604051602001611b95929190612b66565b600484516004811115611ccf57611ccf6130b0565b1415610b575760028460a0015160ff161015611d1957826040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d29190612c28565b6000611d278360ff16611f61565b611d338360ff16611f61565b604051602001611d44929190612a64565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000805b8660a0015160ff16811015611e0a578660c0015181601a8110611d9d57611d9d6130df565b602002015191508460ff168260ff161080611dbd57508360ff168260ff16115b15611df85785836040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d2929190612bfa565b80611e0281612fc0565b915050611d78565b5050505b50505050565b60008082516004811115611e2a57611e2a6130b0565b1480611e485750600382516004811115611e4657611e466130b0565b145b15611e555750601f919050565b600182516004811115611e6a57611e6a6130b0565b1415611e7f5761014982602001516004610b89565b600282516004811115611e9457611e946130b0565b1415611ecc57816040015160ff1660091480611eb75750816040015160ff16600b145b15611ec45750601e919050565b50601f919050565b600482516004811115611ee157611ee16130b0565b1415610b57576000805b8360a0015160ff16811015610d32576000611f218560c0015183601a8110611f1557611f156130df565b60200201516004610b89565b90508060ff16601f1415611f3757949350505050565b8260ff168160ff161115611f49578092505b5080611f5481612fc0565b915050611eeb565b919050565b606081611fa157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611fcb5780611fb581612fc0565b9150611fc49050600a83612d1a565b9150611fa5565b60008167ffffffffffffffff811115611fe657611fe661310e565b6040519080825280601f01601f191660200182016040528015612010576020820181803683370190505b509050815b85156120b557612026600182612ef0565b90506000612035600a88612d1a565b61204090600a612e19565b61204a9088612ef0565b612055906030612cf5565b905060008160f81b905080848481518110612072576120726130df565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506120ac600a89612d1a565b97505050612015565b50949350505050565b6000610149603c8361301c565b81518151600091908111156120de575081515b6020808501519084015160005b83811015612197578251825180821461216757600019602087101561214657600184612118896020612ef0565b6121229190612cdd565b61212d906008612e19565b612138906002612d71565b6121429190612ef0565b1990505b81811683821681810391146121645797506101499650505050505050565b50505b612172602086612cdd565b945061217f602085612cdd565b935050506020816121909190612cdd565b90506120eb565b5084518651610c8e9190612e59565b6000808584116122ae576020841161225957600084156121f15760016121cd866020612ef0565b6121d8906008612e19565b6121e3906002612d71565b6121ed9190612ef0565b1990505b83518116856122008989612cdd565b61220a9190612ef0565b805190935082165b8181146122445787841161222c578794505050505061089a565b8361223681612f74565b945050828451169050612212565b61224e8785612cdd565b94505050505061089a565b8383206122668588612ef0565b6122709087612cdd565b91505b8582106122ac57848220818114156122995761228f8684612cdd565b935050505061089a565b6122a4600184612ef0565b925050612273565b505b5092949350505050565b60606000826000015167ffffffffffffffff8111156122d9576122d961310e565b6040519080825280601f01601f191660200182016040528015612303576020820181803683370190505b5090506000602082019050610d3281856020015186600001515b602081106123555781518352612334602084612cdd565b9250612341602083612cdd565b915061234e602082612ef0565b905061231d565b600019811561238457600161236b836020612ef0565b61237790610100612d71565b6123819190612ef0565b90505b9151835183169219169190911790915250565b6040518060a001604052806123aa6123e3565b81526020016123b76123e3565b81526020016123c46123e3565b81526020016123d16123e3565b81526020016123de6123e3565b905290565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a082015260c0016123de612440565b604051806101800160405280600c906020820280368337509192915050565b604051806103400160405280601a906020820280368337509192915050565b600082601f83011261247057600080fd5b60405161034080820182811067ffffffffffffffff821117156124955761249561310e565b60405281848281018710156124a957600080fd5b600092505b601a8310156124d5576124c0816125b4565b825260019290920191602091820191016124ae565b509195945050505050565b600061040082840312156124f357600080fd5b60405160e0810181811067ffffffffffffffff821117156125165761251661310e565b60405290508082356005811061252b57600080fd5b8152612539602084016125b4565b602082015261254a604084016125b4565b604082015261255b606084016125b4565b606082015261256c608084016125b4565b608082015261257d60a084016125b4565b60a082015261258f8460c0850161245f565b60c08201525092915050565b600061140082840312156125ae57600080fd5b50919050565b803560ff81168114611f5c57600080fd5b600080602083850312156125d857600080fd5b823567ffffffffffffffff808211156125f057600080fd5b818501915085601f83011261260457600080fd5b81358181111561261357600080fd5b86602082850101111561262557600080fd5b60209290920196919550909350505050565b6000611400828403121561264a57600080fd5b610196838361259b565b600080611420838503121561266857600080fd5b612672848461259b565b94611400939093013593505050565b6000611400828403121561269457600080fd5b60405160a0810181811067ffffffffffffffff821117156126b7576126b761310e565b6040526126c484846124e0565b81526126d48461040085016124e0565b60208201526126e78461080085016124e0565b60408201526126fa84610c0085016124e0565b606082015261270d8461100085016124e0565b60808201529392505050565b8060005b601a811015611e0e57815160ff1684526020938401939091019060010161271d565b60008151808452612757816020860160208601612f2a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8051600581106127c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8083525060ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff608082015116608083015260ff60a08201511660a083015260c081015161281960c0840182612719565b505050565b60008351612830818460208801612f2a565b7f2c00000000000000000000000000000000000000000000000000000000000000908301908152835161286a816001840160208801612f2a565b01600101949350505050565b60008651612888818460208b01612f2a565b80830190507f200000000000000000000000000000000000000000000000000000000000000080825287516128c4816001850160208c01612f2a565b6001920191820181905286516128e1816002850160208b01612f2a565b6002920191820181905285516128fe816003850160208a01612f2a565b60039201918201528351612919816004840160208801612f2a565b01600401979650505050505050565b6000835161293a818460208801612f2a565b7f2d00000000000000000000000000000000000000000000000000000000000000908301908152835161286a816001840160208801612f2a565b7f696e76657276616c206d757374206265202a2f280000000000000000000000008152600083516129ac816014850160208801612f2a565b7f2d0000000000000000000000000000000000000000000000000000000000000060149184019182015283516129e9816015840160208801612f2a565b7f290000000000000000000000000000000000000000000000000000000000000060159290910191820152601601949350505050565b7f2a2f000000000000000000000000000000000000000000000000000000000000815260008251612a57816002850160208701612f2a565b9190910160020192915050565b7f6974656d7320696e206c697374206d7573742062652077697468696e20000000815260008351612a9c81601d850160208801612f2a565b7f2d00000000000000000000000000000000000000000000000000000000000000601d918401918201528351612ad981601e840160208801612f2a565b01601e01949350505050565b7f76616c7565206d757374206265203e3d2c000000000000000000000000000000815260008351612b1d816011850160208801612f2a565b7f20616e64203c3d000000000000000000000000000000000000000000000000006011918401918201528351612b5a816018840160208801612f2a565b01601801949350505050565b7f696e76657276616c206d7573742062652077697468696e200000000000000000815260008351612b9e816018850160208801612f2a565b7f2d000000000000000000000000000000000000000000000000000000000000006018918401918201528351612bdb816019840160208801612f2a565b01601901949350505050565b602081526000610196602083018461273f565b604081526000612c0d604083018561273f565b8281036020840152612c1f818561273f565b95945050505050565b604081526000612c3b604083018461273f565b8281036020840152602081527f6c69737473206d7573742068617665206174206c656173742032206974656d7360208201526040810191505092915050565b600061140082019050612c8e828451612789565b6020830151612ca1610400840182612789565b506040830151612cb5610800840182612789565b506060830151612cc9610c00840182612789565b506080830151610d32611000840182612789565b60008219821115612cf057612cf0613052565b500190565b600060ff821660ff84168060ff03821115612d1257612d12613052565b019392505050565b600082612d2957612d29613081565b500490565b600181815b80851115612d69578160001904821115612d4f57612d4f613052565b80851615612d5c57918102915b93841c9390800290612d33565b509250929050565b60006101968383600082612d8757506001610149565b81612d9457506000610149565b8160018114612daa5760028114612db457612dd0565b6001915050610149565b60ff841115612dc557612dc5613052565b50506001821b610149565b5060208310610133831016604e8410600b8410161715612df3575081810a610149565b612dfd8383612d2e565b8060001904821115612e1157612e11613052565b029392505050565b6000816000190483118215151615612e3357612e33613052565b500290565b600060ff821660ff84168160ff0481118215151615612e1157612e11613052565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615612e9357612e93613052565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615612ec757612ec7613052565b50500390565b600061ffff83811690831681811015612ee857612ee8613052565b039392505050565b600082821015612f0257612f02613052565b500390565b600060ff821660ff841680821015612f2157612f21613052565b90039392505050565b60005b83811015612f45578181015183820152602001612f2d565b83811115611e0e5750506000910152565b600061ffff821680612f6a57612f6a613052565b6000190192915050565b600081612f8357612f83613052565b506000190190565b600060ff821680612f6a57612f6a613052565b600061ffff80831681811415612fb657612fb6613052565b6001019392505050565b6000600019821415612fd457612fd4613052565b5060010190565b600060ff821660ff811415612ff257612ff2613052565b60010192915050565b600061ffff8084168061301057613010613081565b92169190910692915050565b60008261302b5761302b613081565b500690565b600060ff83168061304357613043613081565b8060ff84160691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220a111c8db17ef40ebd4d56f3b591d276c2c36972b8a36b01e07c163277a32bd0964736f6c63430008060033";

type CronConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CronConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cron__factory extends ContractFactory {
  constructor(...args: CronConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cron> {
    return super.deploy(overrides || {}) as Promise<Cron>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cron {
    return super.attach(address) as Cron;
  }
  override connect(signer: Signer): Cron__factory {
    return super.connect(signer) as Cron__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CronInterface {
    return new utils.Interface(_abi) as CronInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cron {
    return new Contract(address, _abi, signerOrProvider) as Cron;
  }
}
