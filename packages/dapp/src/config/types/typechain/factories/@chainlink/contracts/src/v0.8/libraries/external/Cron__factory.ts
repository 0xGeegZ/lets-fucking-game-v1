/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  Cron,
  CronInterface,
} from "../../../../../../../@chainlink/contracts/src/v0.8/libraries/external/Cron";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidSpec",
    type: "error",
  },
  {
    inputs: [],
    name: "ListTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownFieldType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "lastTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "nextTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "toCronString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toEncodedSpec",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61301561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061007c5760003560e01c8063b70d69701161005a578063b70d6970146100e7578063bddee373146100fa578063e04b97691461011d57600080fd5b806334373a3b1461008157806336d24def146100a7578063a1ab24f4146100c7575b600080fd5b61009461008f3660046125fd565b610130565b6040519081526020015b60405180910390f35b6100ba6100b536600461258b565b61014f565b60405161009e9190612b99565b6100da6100d53660046125fd565b61019d565b60405161009e9190612b06565b6100946100f53660046125fd565b6101b6565b61010d61010836600461261a565b6101cf565b604051901515815260200161009e565b6100da61012b36600461258b565b6101ea565b600061014961014436849003840184612647565b61022b565b92915050565b61015761235d565b61019683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103dd92505050565b9392505050565b60606101496101b136849003840184612647565b61062a565b60006101496101ca36849003840184612647565b610697565b6000610196826101e436869003860186612647565b9061082f565b606061019683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108a292505050565b600080610237426108bd565b90506000610244426109b2565b90506000610251426109c7565b9050600061025e426109dc565b9050600061026b42610a00565b905060005b600c8560ff16116103c757610289886060015186610a0e565b61029e576001935060009250600091506103b5565b60006102aa8688610b89565b90505b8060ff168560ff16116103af576102c8896040015186610a0e565b6102d957600093506000925061039d565b6102ec6102e7888888610c4f565b610c61565b91506102fc896080015183610a0e565b61030d57600093506000925061039d565b60188460ff16101561039857610327896020015185610a0e565b6103345760009250610386565b603c8360ff16101561038157885161034c9084610a0e565b6103555761036f565b6103628787878787610c7d565b9998505050505050505050565b8261037981612efa565b935050610334565b600092505b8361039081612efa565b94505061030d565b600093505b846103a781612efa565b9550506102ad565b60019450505b846103bf81612efa565b955050610270565b60019450856103d581612ebd565b965050610270565b6103e561235d565b604080518082018252600181527f2000000000000000000000000000000000000000000000000000000000000000602080830191825283518085018552600080825290820181905284518086018652935184528382019290925283518085018552828152810191909152825180840190935284518352848101908301529061046d8183610c98565b6004146104db576040517faf64694e00000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f342073706163657320726571756972656400000000000000000000000000000060448201526064015b60405180910390fd5b60006104e78284610d39565b905060006104f58385610d39565b905060006105038486610d39565b905060006105118587610d39565b905061051c84610d58565b158061052e575061052c83610d58565b155b8061053f575061053d82610d58565b155b80610550575061054e81610d58565b155b80610561575061055f85610d58565b155b156105c8576040517faf64694e00000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f736f6d65206669656c6473206d697373696e670000000000000000000000000060448201526064016104d2565b61061e6040518060a001604052806105df87610e31565b81526020016105ed86610e31565b81526020016105fb85610e31565b815260200161060984610e31565b815260200161061788610e31565b9052611103565b98975050505050505050565b60606106398260000151611285565b6106468360200151611285565b6106538460400151611285565b6106608560600151611285565b61066d8660800151611285565b604051602001610681959493929190612805565b6040516020818303038152906040529050919050565b6000806106a3426108bd565b905060006106b0426109b2565b905060006106bd426109c7565b905060006106ca426109dc565b905060006106d742610a00565b90506000805b60ff861615610819576106f4896060015187610a0e565b610708575060179250603b91506001610807565b801561071b576107188688610b89565b94505b60ff85161561080357610732896040015186610a0e565b6107435760179350603b92506107f1565b6107516102e7888888610c4f565b9150610761896080015183610a0e565b6107725760179350603b92506107f1565b610780896020015185610a0e565b61079a57603b925060ff8416610795576107ec565b6107da565b88516107a69084610a0e565b6103555760ff83166107b7576107c9565b826107c181612eaa565b93505061079a565b603b925060ff84166107da576107ec565b836107e481612eaa565b945050610772565b601793505b846107fb81612eaa565b95505061071b565b5060015b8561081181612eaa565b9650506106dd565b600c95508661082781612e75565b9750506106dd565b60008061083b83611426565b905061084f84606001518260200151610a0e565b8015610868575061086884604001518260400151610a0e565b8015610881575061088184602001518260600151610a0e565b801561089a575061089a84600001518260800151610a0e565b949350505050565b60606108ad826103dd565b6040516020016106819190612b99565b60008080806108d06301e1338086612c39565b6108dc906107b2612bfc565b91506108e96107b261160e565b6108f68361ffff1661160e565b6109009190612e0f565b9050610910816301e28500612d38565b61091a9084612bfc565b9250806109296107b284612dec565b61ffff166109379190612e0f565b610945906301e13380612d38565b61094f9084612bfc565b92505b848311156109aa5761096d610968600184612dec565b611653565b15610987576109806301e2850084612e0f565b9250610998565b6109956301e1338084612e0f565b92505b6109a3600183612dec565b9150610952565b509392505050565b60006109bd82611426565b6020015192915050565b60006109d282611426565b6040015192915050565b60006018603c6109ec8185612c39565b6109f69190612c39565b6101499190612f3b565b6000603c6109f68184612c39565b60008083516004811115610a2457610a24612f9d565b1415610a3257506001610149565b600283516004811115610a4757610a47612f9d565b1415610a67576040830151610a5c9083612f4f565b60ff16159050610149565b600183516004811115610a7c57610a7c612f9d565b1415610a9657826020015160ff168260ff16149050610149565b600383516004811115610aab57610aab612f9d565b1415610adc57826060015160ff168260ff1610158015610ad55750826080015160ff168260ff1611155b9050610149565b600483516004811115610af157610af1612f9d565b1415610b575760005b8360a0015160ff16811015610b4d578360c0015181601a8110610b1f57610b1f612fb3565b602002015160ff168360ff161415610b3b576001915050610149565b80610b4581612edf565b915050610afa565b5060009050610149565b6040517f7d8d432900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260ff1660011480610ba057508260ff166003145b80610bae57508260ff166005145b80610bbc57508260ff166007145b80610bca57508260ff166008145b80610bd857508260ff16600a145b80610be657508260ff16600c145b15610bf35750601f610149565b8260ff1660041480610c0857508260ff166006145b80610c1657508260ff166009145b80610c2457508260ff16600b145b15610c315750601e610149565b610c3a82611653565b15610c475750601d610149565b50601c610149565b600061089a84848460008060006116b2565b60006007610c726201518084612c39565b6109f6906004612bfc565b6000610c8e868686868660006116b2565b9695505050505050565b6000808260000151610cbc8560000151866020015186600001518760200151611856565b610cc69190612bfc565b90505b83516020850151610cda9190612bfc565b8111610d325781610cea81612edf565b9250508260000151610d21856020015183610d059190612e0f565b8651610d119190612e0f565b8386600001518760200151611856565b610d2b9190612bfc565b9050610cc9565b5092915050565b6040805180820190915260008082526020820152610d32838383611977565b600080601f8360200151610d6c9190612e0f565b8351909150600090610d7e9083612bfc565b9050600092505b80821015610e2a57815160ff166080811015610dad57610da6600184612bfc565b9250610e17565b60e08160ff161015610dc457610da6600284612bfc565b60f08160ff161015610ddb57610da6600384612bfc565b60f88160ff161015610df257610da6600484612bfc565b60fc8160ff161015610e0957610da6600584612bfc565b610e14600684612bfc565b92505b5082610e2281612edf565b935050610d85565b5050919050565b610e396123a9565b60408051808201825260018082527f2a00000000000000000000000000000000000000000000000000000000000000602080840191825284518086018652600080825290820181905285518087018752945185528482019290925284518086018652838152602d60f81b818301908152865180880188528481528301849052865180880188529151825281830152855180870187528481527f2f00000000000000000000000000000000000000000000000000000000000000818401908152875180890189528581528401859052875180890189529151825281840152865180880188529485527f2c0000000000000000000000000000000000000000000000000000000000000085840190815287518089018952858152840194909452865180880190975293518652908501919091529192610f746123a9565b610f7e8786611a23565b15610f8c5760008152610c8e565b610f968785611a37565b15610fd557600381526000610fab8886610d39565b9050610fb681611a5e565b60ff166060830152610fc788611a5e565b60ff16608083015250610c8e565b610fdf8784611a37565b156110095760028152610ff28784610d39565b50610ffc87611a5e565b60ff166040820152610c8e565b6110138783611a37565b156110e4576004815260408051808201909152600080825260208201525b600061103c89610d58565b11156110de5760198260a0015160ff161115611084576040517f88b27b5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108e8884610d39565b905061109981611a5e565b8260c001518360a0015160ff16601a81106110b6576110b6612fb3565b60ff909216602092909202015260a082018051906110d382612efa565b60ff16905250611031565b50610c8e565b600181526110f187611a5e565b60ff1660208201529695505050505050565b61110b61235d565b61115282608001516040518060400160405280600b81526020017f646179206f66207765656b00000000000000000000000000000000000000000081525060006006611aed565b61119982606001516040518060400160405280600581526020017f6d6f6e74680000000000000000000000000000000000000000000000000000008152506001600c611aed565b60006111a88360600151611dda565b90506111f083604001516040518060400160405280600381526020017f6461790000000000000000000000000000000000000000000000000000000000815250600184611aed565b61123783602001516040518060400160405280600481526020017f686f75720000000000000000000000000000000000000000000000000000000081525060006017611aed565b61127e83600001516040518060400160405280600681526020017f6d696e75746500000000000000000000000000000000000000000000000000008152506000603b611aed565b5090919050565b606060008251600481111561129c5761129c612f9d565b14156112db57505060408051808201909152600181527f2a00000000000000000000000000000000000000000000000000000000000000602082015290565b6001825160048111156112f0576112f0612f9d565b141561130657610149826020015160ff16611f27565b60038251600481111561131b5761131b612f9d565b141561135257611331826060015160ff16611f27565b611341836080015160ff16611f27565b6040516020016106819291906128b7565b60028251600481111561136757611367612f9d565b141561138d5761137d826040015160ff16611f27565b6040516020016106819190612976565b6004825160048111156113a2576113a2612f9d565b1415610b575760c08201516000906113c390825b602002015160ff16611f27565b905060015b8360a0015160ff16811015610d3257816113f18560c0015183601a81106113b6576113b6612fb3565b6040516020016114029291906127ad565b6040516020818303038152906040529150808061141e90612edf565b9150506113c8565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905290808061146a856108bd565b61ffff16845261147b6107b261160e565b845161148a9061ffff1661160e565b6114949190612e0f565b91506114a4826301e28500612d38565b6114ae9084612bfc565b9250816107b285600001516114c39190612dec565b61ffff166114d19190612e0f565b6114df906301e13380612d38565b6114e99084612bfc565b92506000600191505b600c8260ff161161155a5761150b828660000151610b89565b61151b9060ff1662015180612d38565b9050856115288583612bfc565b111561153c5760ff8216602086015261155a565b6115468185612bfc565b93508161155281612efa565b9250506114f2565b600191505b61157185602001518660000151610b89565b60ff168260ff16116115c0578561158b8562015180612bfc565b111561159f5760ff821660408601526115c0565b6115ac6201518085612bfc565b9350816115b881612efa565b92505061155f565b6115c9866109dc565b60ff1660608601526115da86610a00565b60ff1660808601526115eb86612084565b60ff1660a08601526115fc86610c61565b60ff1660c08601525092949350505050565b600061161b600183612e0f565b915061162961019083612c39565b611634606484612c39565b61163f600485612c39565b6116499190612e0f565b6101499190612bfc565b6000611660600483612f1a565b61ffff161561167157506000919050565b61167c606483612f1a565b61ffff161561168d57506001919050565b61169961019083612f1a565b61ffff16156116aa57506000919050565b506001919050565b60006107b25b8761ffff168161ffff16101561170e576116d181611653565b156116eb576116e46301e2850083612bfc565b91506116fc565b6116f96301e1338083612bfc565b91505b8061170681612ebd565b9150506116b8565b6117166123e7565b601f815261172389611653565b1561173457601d602082015261173c565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff1610156117ed57806117a6600184612dec565b61ffff16600c81106117ba576117ba612fb3565b60200201516117cf9060ff1662015180612d38565b6117d99084612bfc565b9250816117e581612ebd565b92505061178b565b6117f8600188612e26565b6118089060ff1662015180612d38565b6118129084612bfc565b925061182360ff8716610e10612d38565b61182d9084612bfc565b925061183d60ff8616603c612d38565b6118479084612bfc565b925061036260ff851684612bfc565b60008381868511611962576020851161191057600085156118a257600161187e876020612e0f565b611889906008612d38565b611894906002612c90565b61189e9190612e0f565b1990505b845181166000876118b38b8b612bfc565b6118bd9190612e0f565b855190915083165b828114611902578186106118ea576118dd8b8b612bfc565b965050505050505061089a565b856118f481612edf565b9650508386511690506118c5565b85965050505050505061089a565b508383206000905b6119228689612e0f565b8211611960578583208181141561193f578394505050505061089a565b61194a600185612bfc565b935050818061195890612edf565b925050611918565b505b61196c8787612bfc565b979650505050505050565b604080518082019091526000808252602082015260006119a98560000151866020015186600001518760200151611856565b6020808701805191860191909152519091506119c59082612e0f565b8352845160208601516119d89190612bfc565b8114156119e85760008552611a1a565b835183516119f69190612bfc565b85518690611a05908390612e0f565b9052508351611a149082612bfc565b60208601525b50909392505050565b6000611a2f8383612091565b159392505050565b6020808301518351835192840151600093611a55929184919061216c565b14159392505050565b600080611a6a8361227e565b90506000805b82518260ff16101561089a576000838360ff1681518110611a9357611a93612fb3565b016020015160f81c905060308110801590611ab2575060398160ff1611155b15611ada57611ac2603082612e26565b611acd83600a612d57565b611ad79190612c14565b91505b5081611ae581612efa565b925050611a70565b600084516004811115611b0257611b02612f9d565b1415611b0d57611dd4565b600184516004811115611b2257611b22612f9d565b1415611bc5578160ff16846020015160ff161080611b4957508060ff16846020015160ff16115b15611bc0576000611b5c8360ff16611f27565b611b688360ff16611f27565b604051602001611b79929190612a20565b604051602081830303815290604052905083816040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d2929190612b19565b611dd4565b600284516004811115611bda57611bda612f9d565b1415611c2d576001846040015160ff161080611bff57508060ff16846040015160ff16115b15611bc0576000611c106001611f27565b611c1c8360ff16611f27565b604051602001611b799291906128e7565b600384516004811115611c4257611c42612f9d565b1415611c9e578060ff16846080015160ff161180611c6e5750836060015160ff16846080015160ff1611155b15611bc0576000611c818360ff16611f27565b611c8d8360ff16611f27565b604051602001611b79929190612aa1565b600484516004811115611cb357611cb3612f9d565b1415610b575760028460a0015160ff161015611cfd57826040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d29190612b47565b6000611d0b8360ff16611f27565b611d178360ff16611f27565b604051602001611d289291906129bb565b60408051601f1981840301815291905290506000805b8660a0015160ff16811015611dd0578660c0015181601a8110611d6357611d63612fb3565b602002015191508460ff168260ff161080611d8357508360ff168260ff16115b15611dbe5785836040517f206897540000000000000000000000000000000000000000000000000000000081526004016104d2929190612b19565b80611dc881612edf565b915050611d3e565b5050505b50505050565b60008082516004811115611df057611df0612f9d565b1480611e0e5750600382516004811115611e0c57611e0c612f9d565b145b15611e1b5750601f919050565b600182516004811115611e3057611e30612f9d565b1415611e455761014982602001516004610b89565b600282516004811115611e5a57611e5a612f9d565b1415611e9257816040015160ff1660091480611e7d5750816040015160ff16600b145b15611e8a5750601e919050565b50601f919050565b600482516004811115611ea757611ea7612f9d565b1415610b57576000805b8360a0015160ff16811015610d32576000611ee78560c0015183601a8110611edb57611edb612fb3565b60200201516004610b89565b90508060ff16601f1415611efd57949350505050565b8260ff168160ff161115611f0f578092505b5080611f1a81612edf565b915050611eb1565b919050565b606081611f6757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611f915780611f7b81612edf565b9150611f8a9050600a83612c39565b9150611f6b565b60008167ffffffffffffffff811115611fac57611fac612fc9565b6040519080825280601f01601f191660200182016040528015611fd6576020820181803683370190505b509050815b851561207b57611fec600182612e0f565b90506000611ffb600a88612c39565b61200690600a612d38565b6120109088612e0f565b61201b906030612c14565b905060008160f81b90508084848151811061203857612038612fb3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612072600a89612c39565b97505050611fdb565b50949350505050565b6000610149603c83612f3b565b81518151600091908111156120a4575081515b6020808501519084015160005b8381101561215d578251825180821461212d57600019602087101561210c576001846120de896020612e0f565b6120e89190612bfc565b6120f3906008612d38565b6120fe906002612c90565b6121089190612e0f565b1990505b818116838216818103911461212a5797506101499650505050505050565b50505b612138602086612bfc565b9450612145602085612bfc565b935050506020816121569190612bfc565b90506120b1565b5084518651610c8e9190612d78565b600080858411612274576020841161221f57600084156121b7576001612193866020612e0f565b61219e906008612d38565b6121a9906002612c90565b6121b39190612e0f565b1990505b83518116856121c68989612bfc565b6121d09190612e0f565b805190935082165b81811461220a578784116121f2578794505050505061089a565b836121fc81612e93565b9450508284511690506121d8565b6122148785612bfc565b94505050505061089a565b83832061222c8588612e0f565b6122369087612bfc565b91505b858210612272578482208181141561225f576122558684612bfc565b935050505061089a565b61226a600184612e0f565b925050612239565b505b5092949350505050565b60606000826000015167ffffffffffffffff81111561229f5761229f612fc9565b6040519080825280601f01601f1916602001820160405280156122c9576020820181803683370190505b5090506000602082019050610d3281856020015186600001515b6020811061231b57815183526122fa602084612bfc565b9250612307602083612bfc565b9150612314602082612e0f565b90506122e3565b600019811561234a576001612331836020612e0f565b61233d90610100612c90565b6123479190612e0f565b90505b9151835183169219169190911790915250565b6040518060a001604052806123706123a9565b815260200161237d6123a9565b815260200161238a6123a9565b81526020016123976123a9565b81526020016123a46123a9565b905290565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a082015260c0016123a4612406565b604051806101800160405280600c906020820280368337509192915050565b604051806103400160405280601a906020820280368337509192915050565b600082601f83011261243657600080fd5b60405161034080820182811067ffffffffffffffff8211171561245b5761245b612fc9565b604052818482810187101561246f57600080fd5b600092505b601a83101561249b576124868161257a565b82526001929092019160209182019101612474565b509195945050505050565b600061040082840312156124b957600080fd5b60405160e0810181811067ffffffffffffffff821117156124dc576124dc612fc9565b6040529050808235600581106124f157600080fd5b81526124ff6020840161257a565b60208201526125106040840161257a565b60408201526125216060840161257a565b60608201526125326080840161257a565b608082015261254360a0840161257a565b60a08201526125558460c08501612425565b60c08201525092915050565b6000611400828403121561257457600080fd5b50919050565b803560ff81168114611f2257600080fd5b6000806020838503121561259e57600080fd5b823567ffffffffffffffff808211156125b657600080fd5b818501915085601f8301126125ca57600080fd5b8135818111156125d957600080fd5b8660208285010111156125eb57600080fd5b60209290920196919550909350505050565b6000611400828403121561261057600080fd5b6101968383612561565b600080611420838503121561262e57600080fd5b6126388484612561565b94611400939093013593505050565b6000611400828403121561265a57600080fd5b60405160a0810181811067ffffffffffffffff8211171561267d5761267d612fc9565b60405261268a84846124a6565b815261269a8461040085016124a6565b60208201526126ad8461080085016124a6565b60408201526126c084610c0085016124a6565b60608201526126d38461100085016124a6565b60808201529392505050565b8060005b601a811015611dd457815160ff168452602093840193909101906001016126e3565b6000815180845261271d816020860160208601612e49565b601f01601f19169290920160200192915050565b80516005811061275157634e487b7160e01b600052602160045260246000fd5b8083525060ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff608082015116608083015260ff60a08201511660a083015260c08101516127a860c08401826126df565b505050565b600083516127bf818460208801612e49565b7f2c0000000000000000000000000000000000000000000000000000000000000090830190815283516127f9816001840160208801612e49565b01600101949350505050565b60008651612817818460208b01612e49565b80830190507f20000000000000000000000000000000000000000000000000000000000000008082528751612853816001850160208c01612e49565b600192019182018190528651612870816002850160208b01612e49565b60029201918201819052855161288d816003850160208a01612e49565b600392019182015283516128a8816004840160208801612e49565b01600401979650505050505050565b600083516128c9818460208801612e49565b602d60f81b90830190815283516127f9816001840160208801612e49565b7f696e76657276616c206d757374206265202a2f2800000000000000000000000081526000835161291f816014850160208801612e49565b602d60f81b6014918401918201528351612940816015840160208801612e49565b7f290000000000000000000000000000000000000000000000000000000000000060159290910191820152601601949350505050565b7f2a2f0000000000000000000000000000000000000000000000000000000000008152600082516129ae816002850160208701612e49565b9190910160020192915050565b7f6974656d7320696e206c697374206d7573742062652077697468696e200000008152600083516129f381601d850160208801612e49565b602d60f81b601d918401918201528351612a1481601e840160208801612e49565b01601e01949350505050565b7f76616c7565206d757374206265203e3d2c000000000000000000000000000000815260008351612a58816011850160208801612e49565b7f20616e64203c3d000000000000000000000000000000000000000000000000006011918401918201528351612a95816018840160208801612e49565b01601801949350505050565b7f696e76657276616c206d7573742062652077697468696e200000000000000000815260008351612ad9816018850160208801612e49565b602d60f81b6018918401918201528351612afa816019840160208801612e49565b01601901949350505050565b6020815260006101966020830184612705565b604081526000612b2c6040830185612705565b8281036020840152612b3e8185612705565b95945050505050565b604081526000612b5a6040830184612705565b8281036020840152602081527f6c69737473206d7573742068617665206174206c656173742032206974656d7360208201526040810191505092915050565b600061140082019050612bad828451612731565b6020830151612bc0610400840182612731565b506040830151612bd4610800840182612731565b506060830151612be8610c00840182612731565b506080830151610d32611000840182612731565b60008219821115612c0f57612c0f612f71565b500190565b600060ff821660ff84168060ff03821115612c3157612c31612f71565b019392505050565b600082612c4857612c48612f87565b500490565b600181815b80851115612c88578160001904821115612c6e57612c6e612f71565b80851615612c7b57918102915b93841c9390800290612c52565b509250929050565b60006101968383600082612ca657506001610149565b81612cb357506000610149565b8160018114612cc95760028114612cd357612cef565b6001915050610149565b60ff841115612ce457612ce4612f71565b50506001821b610149565b5060208310610133831016604e8410600b8410161715612d12575081810a610149565b612d1c8383612c4d565b8060001904821115612d3057612d30612f71565b029392505050565b6000816000190483118215151615612d5257612d52612f71565b500290565b600060ff821660ff84168160ff0481118215151615612d3057612d30612f71565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615612db257612db2612f71565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615612de657612de6612f71565b50500390565b600061ffff83811690831681811015612e0757612e07612f71565b039392505050565b600082821015612e2157612e21612f71565b500390565b600060ff821660ff841680821015612e4057612e40612f71565b90039392505050565b60005b83811015612e64578181015183820152602001612e4c565b83811115611dd45750506000910152565b600061ffff821680612e8957612e89612f71565b6000190192915050565b600081612ea257612ea2612f71565b506000190190565b600060ff821680612e8957612e89612f71565b600061ffff80831681811415612ed557612ed5612f71565b6001019392505050565b6000600019821415612ef357612ef3612f71565b5060010190565b600060ff821660ff811415612f1157612f11612f71565b60010192915050565b600061ffff80841680612f2f57612f2f612f87565b92169190910692915050565b600082612f4a57612f4a612f87565b500690565b600060ff831680612f6257612f62612f87565b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205c22c427337532fb38a7da3dd6db3f8367ae638adb362c829156d9546408ef7964736f6c63430008060033";

type CronConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CronConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cron__factory extends ContractFactory {
  constructor(...args: CronConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cron> {
    return super.deploy(overrides || {}) as Promise<Cron>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cron {
    return super.attach(address) as Cron;
  }
  override connect(signer: Signer): Cron__factory {
    return super.connect(signer) as Cron__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CronInterface {
    return new utils.Interface(_abi) as CronInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cron {
    return new Contract(address, _abi, signerOrProvider) as Cron;
  }
}
