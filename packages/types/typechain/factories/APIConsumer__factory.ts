/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { APIConsumer, APIConsumerInterface } from "../APIConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "string",
        name: "_jobId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "stringToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b5060405162001ab938038062001ab9833981810160405260808110156200003c57600080fd5b8101908080519060200190929190805160405193929190846401000000008211156200006757600080fd5b838201915060208201858111156200007e57600080fd5b82518660018202830111640100000000821117156200009c57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000d2578082015181840152602081019050620000b5565b50505050905090810190601f168015620001005780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620002285762000222620002a360201b60201c565b6200023a565b62000239816200034d60201b60201c565b5b83600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200028c836200039160201b60201c565b60098190555081600a8190555050505050620003be565b6200034b73c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200030257600080fd5b505afa15801562000317573d6000803e3d6000fd5b505050506040513d60208110156200032e57600080fd5b81019080805190602001909291905050506200034d60201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006060829050600081511415620003b0576000801b915050620003b9565b60208301519150505b919050565b6116eb80620003ce6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f32d59b1161005b5780638f32d59b14610137578063c618a1e414610159578063cfb5192814610177578063f2fde38b1461024657610088565b80634357855e1461008d5780636021abac146100c55780638da5cb5b146100e35780638dc654a21461012d575b600080fd5b6100c3600480360360408110156100a357600080fd5b81019080803590602001909291908035906020019092919050505061028a565b005b6100cd6103b1565b6040518082815260200191505060405180910390f35b6100eb61053f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610135610569565b005b61013f6107dd565b604051808215151515815260200191505060405180910390f35b610161610835565b6040518082815260200191505060405180910390f35b6102306004803603602081101561018d57600080fd5b81019080803590602001906401000000008111156101aa57600080fd5b8201836020820111156101bc57600080fd5b803590602001918460018302840111640100000000831117156101de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061083b565b6040518082815260200191505060405180910390f35b6102886004803603602081101561025c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610866565b005b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806116456028913960400191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a281600781905550505050565b60006103bb611574565b6103cf60095430634357855e60e01b6108ec565b90506104336040518060400160405280600381526020017f676574000000000000000000000000000000000000000000000000000000000081525060405180608001604052806049815260200161166d604991398361091d9092919063ffffffff16565b6104b26040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572e4554482e5553442e564f4c554d453234484f555200000000000000008152508361091d9092919063ffffffff16565b6000670de0b6b3a764000090506105096040518060400160405280600581526020017f74696d657300000000000000000000000000000000000000000000000000000081525082846109509092919063ffffffff16565b610538600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600a54610983565b9250505090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105716107dd565b6105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60006105ed610c3b565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d60208110156106b357600080fd5b81019080805190602001909291905050506040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561072d57600080fd5b505af1158015610741573d6000803e3d6000fd5b505050506040513d602081101561075757600080fd5b81019080805190602001909291905050506107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e61626c6520746f207472616e73666572000000000000000000000000000081525060200191505060405180910390fd5b50565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60075481565b60006060829050600081511415610858576000801b915050610861565b60208301519150505b919050565b61086e6107dd565b6108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6108e981610c65565b50565b6108f4611574565b6108fc611574565b61091385858584610dab909392919063ffffffff16565b9150509392505050565b610934828460800151610e5b90919063ffffffff16565b61094b818460800151610e5b90919063ffffffff16565b505050565b610967828460800151610e5b90919063ffffffff16565b61097e818460800151610e8090919063ffffffff16565b505050565b600030600454604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001209050600454836060018181525050836005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08584610abb87610f24565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b42578082015181840152602081019050610b27565b50505050905090810190601f168015610b6f5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610b9057600080fd5b505af1158015610ba4573d6000803e3d6000fd5b505050506040513d6020811015610bba57600080fd5b8101908080519060200190929190505050610c20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806116226023913960400191505060405180910390fd5b60016004600082825401925050819055508090509392505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806115fc6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610db3611574565b610dc385608001516101006110f0565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b610e688260038351611144565b610e7b818361128990919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811215610eb757610eb282826112ab565b610f20565b67ffffffffffffffff811315610ed657610ed18282611319565b610f1f565b60008112610eef57610eea82600083611144565b610f1e565b610f1d826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03611144565b5b5b5b5050565b6060634042994660e01b60008084600001518560200151866040015187606001516001896080015160000151604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611053578082015181840152602081019050611038565b50505050905090810190601f1680156110805780820380516001836020036101000a031916815260200191505b509950505050505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6110f86115e1565b60006020838161110457fe5b061461111d576020828161111457fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b601781116111715761116b8160058460ff16901b60ff16178461136590919063ffffffff16565b50611284565b60ff81116111b357611196601860058460ff16901b178461136590919063ffffffff16565b506111ad816001856113859092919063ffffffff16565b50611283565b61ffff81116111f6576111d9601960058460ff16901b178461136590919063ffffffff16565b506111f0816002856113859092919063ffffffff16565b50611282565b63ffffffff811161123b5761121e601a60058460ff16901b178461136590919063ffffffff16565b50611235816004856113859092919063ffffffff16565b50611281565b67ffffffffffffffff811161128057611267601b60058460ff16901b178461136590919063ffffffff16565b5061127e816008856113859092919063ffffffff16565b505b5b5b5b5b505050565b6112916115e1565b6112a3838460000151518485516113a7565b905092915050565b6112c960036005600660ff16901b178361136590919063ffffffff16565b5061131582827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0360405160200180828152602001915050604051602081830303815290604052611460565b5050565b61133760026005600660ff16901b178361136590919063ffffffff16565b50611361828260405160200180828152602001915050604051602081830303815290604052611460565b5050565b61136d6115e1565b61137d8384600001515184611485565b905092915050565b61138d6115e1565b61139e8485600001515185856114d3565b90509392505050565b6113af6115e1565b82518211156113bd57600080fd5b846020015182850111156113e8576113e78560026113e18860200151888701611534565b02611550565b5b6000808651805187602083010193508088870111156114075787860182525b60208701925050505b602084106114335780518252602082019150602081019050602084039350611410565b60006001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b61146d8260028351611144565b611480818361128990919063ffffffff16565b505050565b61148d6115e1565b836020015183106114aa576114a9846002866020015102611550565b5b83518051602085830101848153818614156114c6576001820183525b5050508390509392505050565b6114db6115e1565b846020015184830111156114f9576114f885600286850102611550565b5b60006001836101000a03905085518386820101858319825116178152815185880111156115265784870182525b505085915050949350505050565b6000818311156115465782905061154a565b8190505b92915050565b60608260000151905061156383836110f0565b5061156e8382611289565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016115db6115e1565b81525090565b60405180604001604052806060815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65536f75726365206d75737420626520746865206f7261636c65206f6620746865207265717565737468747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a26469706673582212209d684baaba751e66abbee62dd60a36ee74fc88c605f6969e4a3294b52f17f26264736f6c63430006060033";

export class APIConsumer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _oracle: string,
    _jobId: string,
    _fee: BigNumberish,
    _link: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<APIConsumer> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    ) as Promise<APIConsumer>;
  }
  getDeployTransaction(
    _oracle: string,
    _jobId: string,
    _fee: BigNumberish,
    _link: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    );
  }
  attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
